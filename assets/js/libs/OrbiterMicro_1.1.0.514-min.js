//==============================================================================  
// OrbiterMicro_1.1.0.514_Release (Minified)
// www.unionplatform.com
// Release Date: 16-October-2011
// (c) Copyright USER1 Subsystems Corporation
//==============================================================================

(function(b){if(typeof b.net=="undefined"){b.net={}}var a=b.net;a.user1=a.user1?a.user1:{};a.user1.utils=a.user1.utils?a.user1.utils:{};a.user1.utils.createPackage=function(c){var f=c.split(".");var d=b;for(var e=0;e<f.length;e++){d=d[f[e]]===undefined?(d[f[e]]={}):d[f[e]]}};a.user1.utils.createPackage("net.user1.logger");a.user1.utils.createPackage("net.user1.events");a.user1.utils.createPackage("net.user1.orbiter");a.user1.utils.createPackage("net.user1.utils");a.user1.utils.extend=function(d,e){function c(){}c.prototype=e.prototype;d.superclass=e.prototype;d.prototype=new c();d.prototype.constructor=d};a.user1.utils.abstractError=function(){throw new Error("Could not invoke abstract method. This method must be implemented by a subclass.")};a.user1.utils.ArrayUtil=new Object();a.user1.utils.ArrayUtil.indexOf=function(c,e){if(c.indexOf){return c.indexOf(e)}for(var d=c.length;--d>=0;){if(c[d]===e){return d}}return -1};a.user1.utils.ArrayUtil.remove=function(e,d){var c;if(d==null){return false}else{c=a.user1.utils.ArrayUtil.indexOf(e,d);if(c==-1){return false}else{e.splice(c,1);return true}}};a.user1.utils.ArrayUtil.isArray=function(c){return Object.prototype.toString.call(c)==="[object Array]"};a.user1.orbiter.UPC=new Object();a.user1.orbiter.UPC.SEND_MESSAGE_TO_ROOMS="u1";a.user1.orbiter.UPC.SEND_MESSAGE_TO_CLIENTS="u2";a.user1.orbiter.UPC.SET_CLIENT_ATTR="u3";a.user1.orbiter.UPC.JOIN_ROOM="u4";a.user1.orbiter.UPC.SET_ROOM_ATTR="u5";a.user1.orbiter.UPC.LEAVE_ROOM="u10";a.user1.orbiter.UPC.CREATE_ACCOUNT="u11";a.user1.orbiter.UPC.REMOVE_ACCOUNT="u12";a.user1.orbiter.UPC.CHANGE_ACCOUNT_PASSWORD="u13";a.user1.orbiter.UPC.LOGIN="u14";a.user1.orbiter.UPC.GET_CLIENTCOUNT_SNAPSHOT="u18";a.user1.orbiter.UPC.SYNC_TIME="u19";a.user1.orbiter.UPC.GET_ROOMLIST_SNAPSHOT="u21";a.user1.orbiter.UPC.CREATE_ROOM="u24";a.user1.orbiter.UPC.REMOVE_ROOM="u25";a.user1.orbiter.UPC.WATCH_FOR_ROOMS="u26";a.user1.orbiter.UPC.STOP_WATCHING_FOR_ROOMS="u27";a.user1.orbiter.UPC.GET_ROOM_SNAPSHOT="u55";a.user1.orbiter.UPC.SEND_MESSAGE_TO_SERVER="u57";a.user1.orbiter.UPC.OBSERVE_ROOM="u58";a.user1.orbiter.UPC.STOP_OBSERVING_ROOM="u61";a.user1.orbiter.UPC.SET_ROOM_UPDATE_LEVELS="u64";a.user1.orbiter.UPC.CLIENT_HELLO="u65";a.user1.orbiter.UPC.REMOVE_ROOM_ATTR="u67";a.user1.orbiter.UPC.REMOVE_CLIENT_ATTR="u69";a.user1.orbiter.UPC.SEND_ROOMMODULE_MESSAGE="u70";a.user1.orbiter.UPC.SEND_SERVERMODULE_MESSAGE="u71";a.user1.orbiter.UPC.TERMINATE_SESSION="u83";a.user1.orbiter.UPC.LOGOFF="u86";a.user1.orbiter.UPC.GET_CLIENTLIST_SNAPSHOT="u91";a.user1.orbiter.UPC.WATCH_FOR_CLIENTS="u92";a.user1.orbiter.UPC.STOP_WATCHING_FOR_CLIENTS="u93";a.user1.orbiter.UPC.GET_CLIENT_SNAPSHOT="u94";a.user1.orbiter.UPC.OBSERVE_CLIENT="u95";a.user1.orbiter.UPC.STOP_OBSERVING_CLIENT="u96";a.user1.orbiter.UPC.GET_ACCOUNTLIST_SNAPSHOT="u97";a.user1.orbiter.UPC.WATCH_FOR_ACCOUNTS="u98";a.user1.orbiter.UPC.STOP_WATCHING_FOR_ACCOUNTS="u99";a.user1.orbiter.UPC.GET_ACCOUNT_SNAPSHOT="u100";a.user1.orbiter.UPC.OBSERVE_ACCOUNT="u121";a.user1.orbiter.UPC.STOP_OBSERVING_ACCOUNT="u122";a.user1.orbiter.UPC.ADD_ROLE="u133";a.user1.orbiter.UPC.REMOVE_ROLE="u135";a.user1.orbiter.UPC.KICK_CLIENT="u149";a.user1.orbiter.UPC.BAN="u137";a.user1.orbiter.UPC.UNBAN="u139";a.user1.orbiter.UPC.GET_BANNED_LIST_SNAPSHOT="u141";a.user1.orbiter.UPC.WATCH_FOR_BANNED_ADDRESSES="u143";a.user1.orbiter.UPC.STOP_WATCHING_FOR_BANNED_ADDRESSES="u145";a.user1.orbiter.UPC.JOINED_ROOM="u6";a.user1.orbiter.UPC.RECEIVE_MESSAGE="u7";a.user1.orbiter.UPC.CLIENT_ATTR_UPDATE="u8";a.user1.orbiter.UPC.ROOM_ATTR_UPDATE="u9";a.user1.orbiter.UPC.CLIENT_METADATA="u29";a.user1.orbiter.UPC.CREATE_ROOM_RESULT="u32";a.user1.orbiter.UPC.REMOVE_ROOM_RESULT="u33";a.user1.orbiter.UPC.CLIENTCOUNT_SNAPSHOT="u34";a.user1.orbiter.UPC.CLIENT_ADDED_TO_ROOM="u36";a.user1.orbiter.UPC.CLIENT_REMOVED_FROM_ROOM="u37";a.user1.orbiter.UPC.ROOMLIST_SNAPSHOT="u38";a.user1.orbiter.UPC.ROOM_ADDED="u39";a.user1.orbiter.UPC.ROOM_REMOVED="u40";a.user1.orbiter.UPC.WATCH_FOR_ROOMS_RESULT="u42";a.user1.orbiter.UPC.STOP_WATCHING_FOR_ROOMS_RESULT="u43";a.user1.orbiter.UPC.LEFT_ROOM="u44";a.user1.orbiter.UPC.CHANGE_ACCOUNT_PASSWORD_RESULT="u46";a.user1.orbiter.UPC.CREATE_ACCOUNT_RESULT="u47";a.user1.orbiter.UPC.REMOVE_ACCOUNT_RESULT="u48";a.user1.orbiter.UPC.LOGIN_RESULT="u49";a.user1.orbiter.UPC.SERVER_TIME_UPDATE="u50";a.user1.orbiter.UPC.ROOM_SNAPSHOT="u54";a.user1.orbiter.UPC.OBSERVED_ROOM="u59";a.user1.orbiter.UPC.GET_ROOM_SNAPSHOT_RESULT="u60";a.user1.orbiter.UPC.STOPPED_OBSERVING_ROOM="u62";a.user1.orbiter.UPC.CLIENT_READY="u63";a.user1.orbiter.UPC.SERVER_HELLO="u66";a.user1.orbiter.UPC.JOIN_ROOM_RESULT="u72";a.user1.orbiter.UPC.SET_CLIENT_ATTR_RESULT="u73";a.user1.orbiter.UPC.SET_ROOM_ATTR_RESULT="u74";a.user1.orbiter.UPC.GET_CLIENTCOUNT_SNAPSHOT_RESULT="u75";a.user1.orbiter.UPC.LEAVE_ROOM_RESULT="u76";a.user1.orbiter.UPC.OBSERVE_ROOM_RESULT="u77";a.user1.orbiter.UPC.STOP_OBSERVING_ROOM_RESULT="u78";a.user1.orbiter.UPC.ROOM_ATTR_REMOVED="u79";a.user1.orbiter.UPC.REMOVE_ROOM_ATTR_RESULT="u80";a.user1.orbiter.UPC.CLIENT_ATTR_REMOVED="u81";a.user1.orbiter.UPC.REMOVE_CLIENT_ATTR_RESULT="u82";a.user1.orbiter.UPC.SESSION_TERMINATED="u84";a.user1.orbiter.UPC.SESSION_NOT_FOUND="u85";a.user1.orbiter.UPC.LOGOFF_RESULT="u87";a.user1.orbiter.UPC.LOGGED_IN="u88";a.user1.orbiter.UPC.LOGGED_OFF="u89";a.user1.orbiter.UPC.ACCOUNT_PASSWORD_CHANGED="u90";a.user1.orbiter.UPC.CLIENTLIST_SNAPSHOT="u101";a.user1.orbiter.UPC.CLIENT_ADDED_TO_SERVER="u102";a.user1.orbiter.UPC.CLIENT_REMOVED_FROM_SERVER="u103";a.user1.orbiter.UPC.CLIENT_SNAPSHOT="u104";a.user1.orbiter.UPC.OBSERVE_CLIENT_RESULT="u105";a.user1.orbiter.UPC.STOP_OBSERVING_CLIENT_RESULT="u106";a.user1.orbiter.UPC.WATCH_FOR_CLIENTS_RESULT="u107";a.user1.orbiter.UPC.STOP_WATCHING_FOR_CLIENTS_RESULT="u108";a.user1.orbiter.UPC.WATCH_FOR_ACCOUNTS_RESULT="u109";a.user1.orbiter.UPC.STOP_WATCHING_FOR_ACCOUNTS_RESULT="u110";a.user1.orbiter.UPC.ACCOUNT_ADDED="u111";a.user1.orbiter.UPC.ACCOUNT_REMOVED="u112";a.user1.orbiter.UPC.JOINED_ROOM_ADDED_TO_CLIENT="u113";a.user1.orbiter.UPC.JOINED_ROOM_REMOVED_FROM_CLIENT="u114";a.user1.orbiter.UPC.GET_CLIENT_SNAPSHOT_RESULT="u115";a.user1.orbiter.UPC.GET_ACCOUNT_SNAPSHOT_RESULT="u116";a.user1.orbiter.UPC.OBSERVED_ROOM_ADDED_TO_CLIENT="u117";a.user1.orbiter.UPC.OBSERVED_ROOM_REMOVED_FROM_CLIENT="u118";a.user1.orbiter.UPC.CLIENT_OBSERVED="u119";a.user1.orbiter.UPC.STOPPED_OBSERVING_CLIENT="u120";a.user1.orbiter.UPC.OBSERVE_ACCOUNT_RESULT="u123";a.user1.orbiter.UPC.ACCOUNT_OBSERVED="u124";a.user1.orbiter.UPC.STOP_OBSERVING_ACCOUNT_RESULT="u125";a.user1.orbiter.UPC.STOPPED_OBSERVING_ACCOUNT="u126";a.user1.orbiter.UPC.ACCOUNT_LIST_UPDATE="u127";a.user1.orbiter.UPC.UPDATE_LEVELS_UPDATE="u128";a.user1.orbiter.UPC.CLIENT_OBSERVED_ROOM="u129";a.user1.orbiter.UPC.CLIENT_STOPPED_OBSERVING_ROOM="u130";a.user1.orbiter.UPC.ROOM_OCCUPANTCOUNT_UPDATE="u131";a.user1.orbiter.UPC.ROOM_OBSERVERCOUNT_UPDATE="u132";a.user1.orbiter.UPC.ADD_ROLE_RESULT="u134";a.user1.orbiter.UPC.REMOVE_ROLE_RESULT="u136";a.user1.orbiter.UPC.BAN_RESULT="u138";a.user1.orbiter.UPC.UNBAN_RESULT="u140";a.user1.orbiter.UPC.BANNED_LIST_SNAPSHOT="u142";a.user1.orbiter.UPC.WATCH_FOR_BANNED_ADDRESSES_RESULT="u144";a.user1.orbiter.UPC.STOP_WATCHING_FOR_BANNED_ADDRESSES_RESULT="u146";a.user1.orbiter.UPC.BANNED_ADDRESS_ADDED="u147";a.user1.orbiter.UPC.BANNED_ADDRESS_REMOVED="u148";a.user1.orbiter.UPC.KICK_CLIENT_RESULT="u150";a.user1.orbiter.Messages=new Object();a.user1.orbiter.Messages.CLIENT_HEARTBEAT="CLIENT_HEARTBEAT";a.user1.orbiter.ReceiveMessageBroadcastType=new Object();a.user1.orbiter.ReceiveMessageBroadcastType.TO_SERVER="0";a.user1.orbiter.ReceiveMessageBroadcastType.TO_ROOMS="1";a.user1.orbiter.ReceiveMessageBroadcastType.TO_CLIENTS="2";a.user1.orbiter.RoomIDParser=new Object();a.user1.orbiter.RoomIDParser.getSimpleRoomID=function(c){if(c.indexOf(".")==-1){return c}else{return c.slice(c.lastIndexOf(".")+1)}};a.user1.orbiter.RoomIDParser.getQualifier=function(c){if(c.indexOf(".")==-1){return""}else{return c.slice(0,c.lastIndexOf("."))}};a.user1.orbiter.RoomIDParser.splitID=function(c){return[getQualifier(c),getSimpleRoomID(c)]};a.user1.utils.UDictionary=function(){};a.user1.utils.UDictionary.prototype.length=function(){var c=0;for(var d in this){c++}return c};a.user1.orbiter.Tokens=new Object();a.user1.orbiter.Tokens.RS="|";a.user1.orbiter.Tokens.GLOBAL_ATTR="";a.user1.orbiter.System=function(c){this.window=c;this.clientType="OrbiterMicro";this.clientVersion=new a.user1.orbiter.VersionNumber(1,1,0,514);this.upcVersion=new a.user1.orbiter.VersionNumber(1,9,3)};a.user1.orbiter.System.prototype.getClientType=function(){return this.clientType};a.user1.orbiter.System.prototype.getClientVersion=function(){return this.clientVersion};a.user1.orbiter.System.prototype.getUPCVersion=function(){return this.upcVersion};a.user1.orbiter.System.prototype.isJavaScriptCompatible=function(){if(this.window==null&&typeof XMLHttpRequest!="undefined"){return true}if(this.window!=null){if(typeof XMLHttpRequest!="undefined"&&typeof new XMLHttpRequest().withCredentials!="undefined"){return true}if(typeof XDomainRequest!="undefined"&&this.window.location.protocol!="file:"){return true}if(this.window.postMessage!=null){return true}}return false};a.user1.orbiter.System.prototype.hasHTTPDirectConnection=function(){if((typeof XMLHttpRequest!="undefined"&&typeof new XMLHttpRequest().withCredentials!="undefined")||(typeof XDomainRequest!="undefined"&&this.window!=null&&this.window.location.protocol!="file:")||(this.window==null&&typeof XMLHttpRequest!="undefined")){return true}else{return false}};a.user1.orbiter.System.prototype.hasWebSocket=function(){return(typeof WebSocket!=="undefined"||typeof MozWebSocket!=="undefined")};a.user1.orbiter.System.prototype.toString=function(){return"[object System]"};a.user1.orbiter.VersionNumber=function(c,e,d,f){this.major=c;this.minor=e;this.revision=d;this.build=f==undefined?-1:f};a.user1.orbiter.VersionNumber.prototype.fromVersionString=function(d){var c=d.split(".");major=c[0];minor=c[1];revision=c[2];build=c.length==4?c[4]:-1};a.user1.orbiter.VersionNumber.prototype.toStringVerbose=function(){var c=this.major+"."+this.minor+"."+this.revision+((this.build==-1)?"":" (Build "+this.build+")");return c};a.user1.orbiter.VersionNumber.prototype.toString=function(){var c=this.major+"."+this.minor+"."+this.revision+((this.build==-1)?"":"."+this.build);return c};a.user1.utils.NumericFormatter=new Object();a.user1.utils.NumericFormatter.dateToLocalHrMinSec=function(c){var d=a.user1.utils.NumericFormatter.addLeadingZero(c.getHours())+":"+a.user1.utils.NumericFormatter.addLeadingZero(c.getMinutes())+":"+a.user1.utils.NumericFormatter.addLeadingZero(c.getSeconds());return d};a.user1.utils.NumericFormatter.dateToLocalHrMinSecMs=function(c){return a.user1.utils.NumericFormatter.dateToLocalHrMinSec(c)+"."+a.user1.utils.NumericFormatter.addTrailingZeros(c.getMilliseconds())};a.user1.utils.NumericFormatter.addLeadingZero=function(c){return((c>9)?"":"0")+c};a.user1.utils.NumericFormatter.addTrailingZeros=function(d){var c=d.toString();if(c.length==1){return c+"00"}else{if(c.length==2){return c+"0"}else{return c}}};a.user1.events.EventListener=function(d,c){this.listener=d;this.thisArg=c};a.user1.events.EventListener.prototype.getListenerFunction=function(){return this.listener};a.user1.events.EventListener.prototype.getThisArg=function(){return this.thisArg};a.user1.events.EventListener.prototype.toString=function(){return"[object EventListener]"};a.user1.events.EventDispatcher=function(c){this.listeners=new Object();if(c!==undefined){this.target=c}else{this.target=this}};a.user1.events.EventDispatcher.prototype.addEventListener=function(f,g,d){if(this.listeners[f]===undefined){this.listeners[f]=new Array()}var c=this.listeners[f];if(this.hasListener(f,g)){return false}var e=new a.user1.events.EventListener(g,d);c.push(e);return true};a.user1.events.EventDispatcher.prototype.removeEventListener=function(f,g){var c=this.listeners[f];if(c===undefined){return false}var d;for(var e=0;e<c.length;e++){if(c[e].getListenerFunction()==g){d=true;c.splice(e,1);break}}if(c.length==0){delete this.listeners[f]}return d};a.user1.events.EventDispatcher.prototype.hasListener=function(e,f){var c=this.listeners[e];if(c===undefined){return false}for(var d=0;d<c.length;d++){if(c[d].getListenerFunction()==f){return true}}return false};a.user1.events.EventDispatcher.prototype.getListeners=function(c){return this.listeners[c]};a.user1.events.EventDispatcher.prototype.dispatchEvent=function(f){var c=this.listeners[f.type];if(c===undefined){return}if(f.type==undefined){throw new Error("Event dispatch failed. No event name specified by "+f)}f.target=this.target;var d=c.length;for(var e=0;e<d;e++){c[e].getListenerFunction().apply(c[e].getThisArg(),[f])}};a.user1.events.EventDispatcher.prototype.toString=function(){return"[object EventDispatcher]"};a.user1.events.Event=function(c){if(c!==undefined){this.type=c}else{throw new Error("Event creation failed. No type specified. Event: "+this)}this.target=null};a.user1.events.Event.prototype.toString=function(){return"[object Event]"};a.user1.logger.ConsoleLogger=function(d){this.log=d;this.log.addEventListener(a.user1.logger.LogEvent.UPDATE,this.updateListener,this);var e=this.log.getHistory();for(var c=0;c<e.length;c++){this.out(e[c])}};a.user1.logger.ConsoleLogger.prototype.updateListener=function(f){var c=f.getTimeStamp();var g=f.getLevel();var d=(g==a.user1.logger.Logger.INFO||g==a.user1.logger.Logger.WARN)?" ":"";this.out(c+(c==""?"":" ")+f.getLevel()+": "+d+f.getMessage())};a.user1.logger.ConsoleLogger.prototype.out=function(c){if(typeof console==="undefined"||typeof console.log==="undefined"){return}console.log(c)};a.user1.logger.ConsoleLogger.prototype.dispose=function(){this.log.removeEventListener(a.user1.logger.LogEvent.UPDATE,this.updateListener);this.log=log=null};a.user1.logger.LogEvent=function(d,e,f,c){a.user1.events.Event.call(this,d);this.message=e;this.level=f;this.timeStamp=c};a.user1.utils.extend(a.user1.logger.LogEvent,a.user1.events.Event);a.user1.logger.LogEvent.UPDATE="UPDATE";a.user1.logger.LogEvent.LEVEL_CHANGE="LEVEL_CHANGE";a.user1.logger.LogEvent.prototype.getMessage=function(){return this.message};a.user1.logger.LogEvent.prototype.getLevel=function(){return this.level};a.user1.logger.LogEvent.prototype.getTimeStamp=function(){return this.timeStamp};a.user1.logger.LogEvent.prototype.toString=function(){return"[object LogEvent]"};a.user1.logger.Logger=function(c){a.user1.events.EventDispatcher.call(this);this.suppressionTerms=new Array();this.timeStampEnabled=false;this.logLevel=0;this.messages=new Array();this.historyLength=0;this.setHistoryLength(c==null?100:c);this.enableTimeStamp();this.setLevel(a.user1.logger.Logger.INFO)};a.user1.utils.extend(a.user1.logger.Logger,a.user1.events.EventDispatcher);a.user1.logger.Logger.FATAL="FATAL";a.user1.logger.Logger.ERROR="ERROR";a.user1.logger.Logger.WARN="WARN";a.user1.logger.Logger.INFO="INFO";a.user1.logger.Logger.DEBUG="DEBUG";a.user1.logger.Logger.logLevels=new Array(a.user1.logger.Logger.FATAL,a.user1.logger.Logger.ERROR,a.user1.logger.Logger.WARN,a.user1.logger.Logger.INFO,a.user1.logger.Logger.DEBUG);a.user1.logger.Logger.prototype.setLevel=function(d){if(d!==undefined){for(var c=0;c<a.user1.logger.Logger.logLevels.length;c++){if(a.user1.logger.Logger.logLevels[c].toLowerCase()==d.toLowerCase()){this.logLevel=c;this.dispatchEvent(new a.user1.logger.LogEvent(a.user1.logger.LogEvent.LEVEL_CHANGE,null,d));return}}}this.warn("Invalid log level specified: "+d)};a.user1.logger.Logger.prototype.getLevel=function(){return a.user1.logger.Logger.logLevels[this.logLevel]};a.user1.logger.Logger.prototype.fatal=function(c){this.addEntry(0,a.user1.logger.Logger.FATAL,c)};a.user1.logger.Logger.prototype.error=function(c){this.addEntry(1,a.user1.logger.Logger.ERROR,c)};a.user1.logger.Logger.prototype.warn=function(c){this.addEntry(2,a.user1.logger.Logger.WARN,c)};a.user1.logger.Logger.prototype.info=function(c){this.addEntry(3,a.user1.logger.Logger.INFO,c)};a.user1.logger.Logger.prototype.debug=function(c){this.addEntry(4,a.user1.logger.Logger.DEBUG,c)};a.user1.logger.Logger.prototype.addSuppressionTerm=function(c){this.debug("Added suppression term. Log messages containing '"+c+"' will now be ignored.");this.suppressionTerms.push(c)};a.user1.logger.Logger.prototype.removeSuppressionTerm=function(c){var d=a.user1.utils.ArrayUtil.indexOf(this.suppressionTerms,c);if(d!=-1){this.suppressionTerms.splice(d,1);this.debug("Removed suppression term. Log messages containing '"+c+"' will now be shown.");return true}return false};a.user1.logger.Logger.prototype.addEntry=function(k,c,j){var d="";var h;if(this.logLevel<k){return}for(var f=this.suppressionTerms.length;--f>=0;){if(j.indexOf(this.suppressionTerms[f])!=-1){return}}if(this.timeStampEnabled){h=new Date();d=h.getMonth()+1+"/"+String(h.getDate())+"/"+String(h.getFullYear()).substr(2)+" "+a.user1.utils.NumericFormatter.dateToLocalHrMinSecMs(h)+" UTC"+(h.getTimezoneOffset()>=0?"-":"+")+Math.abs(h.getTimezoneOffset()/60)}this.addToHistory(c,j,d);var g=new a.user1.logger.LogEvent(a.user1.logger.LogEvent.UPDATE,j,c,d);this.dispatchEvent(g)};a.user1.logger.Logger.prototype.setHistoryLength=function(c){this.historyLength=c;if(this.messages.length>this.historyLength){this.messages.splice(this.historyLength)}};a.user1.logger.Logger.prototype.getHistoryLength=function(){return this.historyLength};a.user1.logger.Logger.prototype.addToHistory=function(e,d,c){this.messages.push(c+(c==""?"":" ")+e+": "+d);if(this.messages.length>this.historyLength){this.messages.shift()}};a.user1.logger.Logger.prototype.getHistory=function(){return this.messages.slice(0)};a.user1.logger.Logger.prototype.enableTimeStamp=function(){this.timeStampEnabled=true};a.user1.logger.Logger.prototype.disableTimeStamp=function(){this.timeStampEnabled=false};a.user1.logger.Logger.prototype.toString=function(){return"[object Logger]"};a.user1.orbiter.ConnectionManagerEvent=function(e,d,c){a.user1.events.Event.call(this,e);this.connection=d;this.status=c};a.user1.utils.extend(a.user1.orbiter.ConnectionManagerEvent,a.user1.events.Event);a.user1.orbiter.ConnectionManagerEvent.BEGIN_CONNECT="BEGIN_CONNECT";a.user1.orbiter.ConnectionManagerEvent.SELECT_CONNECTION="SELECT_CONNECTION";a.user1.orbiter.ConnectionManagerEvent.READY="READY";a.user1.orbiter.ConnectionManagerEvent.CONNECT_FAILURE="CONNECT_FAILURE";a.user1.orbiter.ConnectionManagerEvent.CLIENT_KILL_CONNECT="CLIENT_KILL_CONNECT";a.user1.orbiter.ConnectionManagerEvent.SERVER_KILL_CONNECT="SERVER_KILL_CONNECT";a.user1.orbiter.ConnectionManagerEvent.DISCONNECT="DISCONNECT";a.user1.orbiter.ConnectionManagerEvent.prototype.getConnection=function(){return this.connection};a.user1.orbiter.ConnectionManagerEvent.prototype.getStatus=function(){return this.status};a.user1.orbiter.ConnectionManagerEvent.prototype.toString=function(){return"[object ConnectionManagerEvent]"};a.user1.orbiter.ConnectionManager=function(c){a.user1.events.EventDispatcher.call(this);this.orbiter=c;this.connectAttemptCount=0;this.connectAbortCount=0;this.readyCount=0;this.connectFailedCount=0;this.connectionState=a.user1.orbiter.ConnectionState.NOT_CONNECTED;this.readyTimeout=0;this.connections=new Array();this.activeConnection=null;this.inProgressConnection=null;this.currentConnectionIndex=0;this.attemptedConnections=null;this.setReadyTimeout(a.user1.orbiter.ConnectionManager.DEFAULT_READY_TIMEOUT)};a.user1.utils.extend(a.user1.orbiter.ConnectionManager,a.user1.events.EventDispatcher);a.user1.orbiter.ConnectionManager.DEFAULT_READY_TIMEOUT=10000;a.user1.orbiter.ConnectionManager.prototype.connect=function(){if(this.connections.length==0){this.orbiter.getLog().error("[CONNECTION_MANAGER] No connections defined. Connection request ignored.");return}this.connectAttemptCount++;this.attemptedConnections=new Array();switch(this.connectionState){case a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS:this.orbiter.getLog().info("[CONNECTION_MANAGER] Connection attempt already in progress. Existing attempt must be aborted before new connection attempt begins...");this.disconnect();break;case a.user1.orbiter.ConnectionState.READY:this.orbiter.getLog().info("[CONNECTION_MANAGER] Existing connection to Union must be disconnected before new connection attempt begins.");this.disconnect();break}this.connectionState=a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS;this.orbiter.getLog().debug("[CONNECTION_MANAGER] Searching for most recent valid connection.");var c=this.currentConnectionIndex;while(!this.getCurrentConnection().isValid()){this.advance();if(this.currentConnectionIndex==c){this.orbiter.getLog().debug("[CONNECTION_MANAGER] No valid connection found. Starting connection attempt with first connection.");this.currentConnectionIndex=0;break}}this.dispatchBeginConnect();this.connectCurrentConnection()};a.user1.orbiter.ConnectionManager.prototype.disconnect=function(){if(this.connections.length==0){this.dispatchConnectFailure("No connections defined. Disconnection attempt failed.");return}switch(this.connectionState){case a.user1.orbiter.ConnectionState.READY:this.orbiter.getLog().info("[CONNECTION_MANAGER] Closing existing connection: "+this.getActiveConnection().toString());this.connectionState=a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS;this.disconnectConnection(this.getActiveConnection());break;case a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS:this.orbiter.getLog().info("[CONNECTION_MANAGER] Aborting existing connection attempt: "+this.getInProgressConnection().toString());this.connectAbortCount++;this.connectionState=a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS;this.disconnectConnection(this.getInProgressConnection());this.orbiter.getLog().info("[CONNECTION_MANAGER] Connection abort complete.");break;case a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS:this.orbiter.getLog().info("[CONNECTION_MANAGER] Disconnection request ignored. Already disconnecting.");break}};a.user1.orbiter.ConnectionManager.prototype.disconnectConnection=function(c){c.disconnect()};a.user1.orbiter.ConnectionManager.prototype.connectCurrentConnection=function(){if(this.connections.length==0){this.connectionState=a.user1.orbiter.ConnectionState.NOT_CONNECTED;this.connectFailedCount++;this.dispatchConnectFailure("No connections defined. Connection attempt failed.");return}this.inProgressConnection=this.getCurrentConnection();if(a.user1.utils.ArrayUtil.indexOf(this.attemptedConnections,this.inProgressConnection)!=-1){this.advanceAndConnect();return}this.dispatchSelectConnection(this.inProgressConnection);this.orbiter.getLog().info("[CONNECTION_MANAGER] Attempting connection via "+this.inProgressConnection.toString()+". (Connection "+(this.attemptedConnections.length+1)+" of "+this.connections.length+". Attempt "+this.connectAttemptCount+" since last successful connection).");this.addConnectionListeners(this.inProgressConnection);this.inProgressConnection.connect()};a.user1.orbiter.ConnectionManager.prototype.advanceAndConnect=function(){if(!this.connectAttemptComplete()){this.advance();this.connectCurrentConnection()}else{this.connectFailedCount++;this.connectionState=a.user1.orbiter.ConnectionState.NOT_CONNECTED;this.orbiter.getLog().info("[CONNECTION_MANAGER] Connection failed for all specified hosts and ports.");this.dispatchConnectFailure("Connection failed for all specified hosts and ports.")}};a.user1.orbiter.ConnectionManager.prototype.connectAttemptComplete=function(){return this.attemptedConnections.length==this.connections.length};a.user1.orbiter.ConnectionManager.prototype.advance=function(){this.currentConnectionIndex++;if(this.currentConnectionIndex==this.connections.length){this.currentConnectionIndex=0}};a.user1.orbiter.ConnectionManager.prototype.addConnection=function(c){if(c!=null){this.orbiter.getLog().info("[CONNECTION_MANAGER] New connection added. "+c.toString()+".");c.setOrbiter(this.orbiter);this.connections.push(c)}};a.user1.orbiter.ConnectionManager.prototype.removeConnection=function(c){if(c!=null){c.disconnect();this.removeConnectionListeners(c);return a.user1.utils.ArrayUtil.remove(this.connections,c)}else{return false}};a.user1.orbiter.ConnectionManager.prototype.removeAllConnections=function(){if(this.connections.length==0){this.orbiter.getLog().info("[CONNECTION_MANAGER] removeAllConnections() ignored.  No connections to remove.");return}this.orbiter.getLog().info("[CONNECTION_MANAGER] Removing all connections...");this.disconnect();while(this.connections.length>0){this.removeConnection(this.connections[0])}this.currentConnectionIndex=0;this.orbiter.getLog().info("[CONNECTION_MANAGER] All connections removed.")};a.user1.orbiter.ConnectionManager.prototype.getActiveConnection=function(){return this.activeConnection};a.user1.orbiter.ConnectionManager.prototype.getInProgressConnection=function(){return this.inProgressConnection};a.user1.orbiter.ConnectionManager.prototype.getConnections=function(){return this.connections.slice()};a.user1.orbiter.ConnectionManager.prototype.getCurrentConnection=function(){return this.connections[this.currentConnectionIndex]};a.user1.orbiter.ConnectionManager.prototype.addConnectionListeners=function(c){if(c!=null){c.addEventListener(a.user1.orbiter.ConnectionEvent.READY,this.readyListener,this);c.addEventListener(a.user1.orbiter.ConnectionEvent.CONNECT_FAILURE,this.connectFailureListener,this);c.addEventListener(a.user1.orbiter.ConnectionEvent.DISCONNECT,this.disconnectListener,this);c.addEventListener(a.user1.orbiter.ConnectionEvent.CLIENT_KILL_CONNECT,this.clientKillConnectListener,this);c.addEventListener(a.user1.orbiter.ConnectionEvent.SERVER_KILL_CONNECT,this.serverKillConnectListener,this)}};a.user1.orbiter.ConnectionManager.prototype.removeConnectionListeners=function(c){if(c!=null){c.removeEventListener(a.user1.orbiter.ConnectionEvent.READY,this.readyListener);c.removeEventListener(a.user1.orbiter.ConnectionEvent.CONNECT_FAILURE,this.connectFailureListener);c.removeEventListener(a.user1.orbiter.ConnectionEvent.DISCONNECT,this.disconnectListener);c.removeEventListener(a.user1.orbiter.ConnectionEvent.CLIENT_KILL_CONNECT,this.clientKillConnectListener);c.removeEventListener(a.user1.orbiter.ConnectionEvent.SERVER_KILL_CONNECT,this.serverKillConnectListener)}};a.user1.orbiter.ConnectionManager.prototype.isReady=function(){return this.connectionState==a.user1.orbiter.ConnectionState.READY};a.user1.orbiter.ConnectionManager.prototype.getConnectionState=function(){return this.connectionState};a.user1.orbiter.ConnectionManager.prototype.getReadyCount=function(){return this.readyCount};a.user1.orbiter.ConnectionManager.prototype.getConnectFailedCount=function(){return this.connectFailedCount};a.user1.orbiter.ConnectionManager.prototype.getConnectAttemptCount=function(){return this.connectAttemptCount};a.user1.orbiter.ConnectionManager.prototype.getConnectAbortCount=function(){return this.connectAbortCount};a.user1.orbiter.ConnectionManager.prototype.readyListener=function(c){this.connectionState=a.user1.orbiter.ConnectionState.READY;this.inProgressConnection=null;this.activeConnection=c.target;this.readyCount++;this.connectFailedCount=0;this.connectAttemptCount=0;this.connectAbortCount=0;this.dispatchReady()};a.user1.orbiter.ConnectionManager.prototype.connectFailureListener=function(c){this.orbiter.getLog().warn("[CONNECTION_MANAGER] Connection failed for "+c.target.toString()+". Status: ["+c.getStatus()+"]");this.removeConnectionListeners(c.target);this.inProgressConnection=null;if(this.connectionState==a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS){this.dispatchConnectFailure("Connection closed by client.")}else{this.attemptedConnections.push(c.target);this.advanceAndConnect()}};a.user1.orbiter.ConnectionManager.prototype.disconnectListener=function(c){this.connectionState=a.user1.orbiter.ConnectionState.NOT_CONNECTED;this.removeConnectionListeners(c.target);this.activeConnection=null;this.dispatchDisconnect(c.target)};a.user1.orbiter.ConnectionManager.prototype.clientKillConnectListener=function(c){this.dispatchClientKillConnect(c.target)};a.user1.orbiter.ConnectionManager.prototype.serverKillConnectListener=function(c){this.dispatchServerKillConnect(c.target)};a.user1.orbiter.ConnectionManager.prototype.setReadyTimeout=function(c){if(c>0){this.readyTimeout=c;this.orbiter.getLog().info("[CONNECTION_MANAGER] Ready timeout set to "+c+" ms.");if(c<3000){this.orbiter.getLog().warn("[CONNECTION_MANAGER] Current ready timeout ("+c+") may not allow sufficient time to connect to Union Server over a typical internet connection.")}}else{this.orbiter.getLog().warn("[CONNECTION_MANAGER] Invalid ready timeout specified: "+c+". Duration must be greater than zero.")}};a.user1.orbiter.ConnectionManager.prototype.getReadyTimeout=function(){return this.readyTimeout};a.user1.orbiter.ConnectionManager.prototype.dispatchBeginConnect=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionManagerEvent(a.user1.orbiter.ConnectionManagerEvent.BEGIN_CONNECT))};a.user1.orbiter.ConnectionManager.prototype.dispatchSelectConnection=function(c){this.dispatchEvent(new a.user1.orbiter.ConnectionManagerEvent(a.user1.orbiter.ConnectionManagerEvent.SELECT_CONNECTION,c))};a.user1.orbiter.ConnectionManager.prototype.dispatchConnectFailure=function(c){this.dispatchEvent(new a.user1.orbiter.ConnectionManagerEvent(a.user1.orbiter.ConnectionManagerEvent.CONNECT_FAILURE,null,c))};a.user1.orbiter.ConnectionManager.prototype.dispatchDisconnect=function(c){this.dispatchEvent(new a.user1.orbiter.ConnectionManagerEvent(a.user1.orbiter.ConnectionManagerEvent.DISCONNECT,c))};a.user1.orbiter.ConnectionManager.prototype.dispatchServerKillConnect=function(c){this.dispatchEvent(new a.user1.orbiter.ConnectionManagerEvent(a.user1.orbiter.ConnectionManagerEvent.SERVER_KILL_CONNECT,c))};a.user1.orbiter.ConnectionManager.prototype.dispatchClientKillConnect=function(c){this.dispatchEvent(new a.user1.orbiter.ConnectionManagerEvent(a.user1.orbiter.ConnectionManagerEvent.CLIENT_KILL_CONNECT,c))};a.user1.orbiter.ConnectionManager.prototype.dispatchReady=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionManagerEvent(a.user1.orbiter.ConnectionManagerEvent.READY))};a.user1.orbiter.ConnectionManager.prototype.dispose=function(){this.removeAllConnections();this.attemptedConnections=null;this.activeConnection=null;this.inProgressConnection=null;this.connections=null};a.user1.orbiter.ConnectionMonitor=function(c){this.connectionTimeout=0;this.heartbeatIntervalID=-1;this.heartbeatCounter=0;this.heartbeatEnabled=true;this.heartbeats=new a.user1.utils.UDictionary();this.oldestHeartbeat=0;this.heartBeatFrequency=-1;this.sharedPing=false;this.autoReconnectFrequency=-1;this.autoReconnectTimeoutID=-1;this.autoReconnectAttemptLimit=-1;this.orbiter=c;this.msgManager=c.getMessageManager();this.log=c.getLog();this.orbiter.addEventListener(a.user1.orbiter.OrbiterEvent.READY,this.connectReadyListener,this);this.orbiter.addEventListener(a.user1.orbiter.OrbiterEvent.CLOSE,this.connectCloseListener,this);this.disableHeartbeatLogging()};a.user1.orbiter.ConnectionMonitor.DEFAULT_HEARTBEAT_FREQUENCY=10000;a.user1.orbiter.ConnectionMonitor.MIN_HEARTBEAT_FREQUENCY=20;a.user1.orbiter.ConnectionMonitor.DEFAULT_AUTORECONNECT_FREQUENCY=-1;a.user1.orbiter.ConnectionMonitor.DEFAULT_AUTORECONNECT_ATTEMPT_LIMIT=-1;a.user1.orbiter.ConnectionMonitor.DEFAULT_CONNECTION_TIMEOUT=60000;a.user1.orbiter.ConnectionMonitor.prototype.connectReadyListener=function(c){this.msgManager.addMessageListener(a.user1.orbiter.Messages.CLIENT_HEARTBEAT,this.heartbeatMessageListener,this);this.startHeartbeat();this.stopReconnect()};a.user1.orbiter.ConnectionMonitor.prototype.connectCloseListener=function(d){this.stopHeartbeat();if(this.autoReconnectFrequency>-1){if(this.autoReconnectTimeoutID!=-1){return}else{var c=this;setTimeout(function(){c.log.warn("[CONNECTION_MONITOR] Disconnection detected.");c.doReconnect()},1)}}};a.user1.orbiter.ConnectionMonitor.prototype.enableHeartbeat=function(){this.log.info("[CONNECTION_MONITOR] Heartbeat enabled.");this.heartbeatEnabled=true;this.startHeartbeat()};a.user1.orbiter.ConnectionMonitor.prototype.disableHeartbeat=function(){this.log.info("[CONNECTION_MONITOR] Heartbeat disabled.");this.heartbeatEnabled=false;this.stopHeartbeat()};a.user1.orbiter.ConnectionMonitor.prototype.startHeartbeat=function(){if(!this.heartbeatEnabled){this.log.info("[CONNECTION_MONITOR] Heartbeat is currently disabled. Ignoring start request.");return}this.stopHeartbeat();this.heartbeats=new a.user1.utils.UDictionary();var c=this;var d=this.heartbeatTimerListener;this.heartbeatIntervalID=setInterval(function(){d.call(c)},this.heartBeatFrequency)};a.user1.orbiter.ConnectionMonitor.prototype.stopHeartbeat=function(){clearInterval(this.heartbeatIntervalID);this.heartbeats=null};a.user1.orbiter.ConnectionMonitor.prototype.heartbeatTimerListener=function(){if(!this.orbiter.isReady()){this.log.info("[CONNECTION_MONITOR] Orbiter is not connected. Stopping heartbeat.");this.stopHeartbeat();return}var c;var d=new Date().getTime();this.heartbeats[this.heartbeatCounter]=d;this.orbiter.getMessageManager().sendUPC("u2",a.user1.orbiter.Messages.CLIENT_HEARTBEAT,this.orbiter.getClientID(),"",this.heartbeatCounter);this.heartbeatCounter++;if(this.heartbeats.length==1){this.oldestHeartbeat=d}else{this.oldestHeartbeat=Number.MAX_VALUE;for(var e in this.heartbeats){if(this.heartbeats[e]<this.oldestHeartbeat){this.oldestHeartbeat=this.heartbeats[e]}}}c=d-this.oldestHeartbeat;if(c>this.connectionTimeout){this.log.warn("[CONNECTION_MONITOR] No response from server in "+c+"ms. Starting automatic disconnect.");this.orbiter.disconnect()}};a.user1.orbiter.ConnectionMonitor.prototype.heartbeatMessageListener=function(c,e){var d=new Date().getTime()-this.heartbeats[parseInt(e)];this.orbiter.self().ping=d;this.orbiter.getMessageManager().sendUPC("u3",this.orbiter.getClientID(),"","_PING",d.toString(),"","0",this.sharedPing);delete this.heartbeats[parseInt(e)]};a.user1.orbiter.ConnectionMonitor.prototype.reconnectTimerListener=function(c){this.stopReconnect();if(this.orbiter.getConnectionManager().connectionState==a.user1.orbiter.ConnectionState.NOT_CONNECTED){this.doReconnect()}};a.user1.orbiter.ConnectionMonitor.prototype.stopReconnect=function(){clearTimeout(this.autoReconnectTimeoutID);this.autoReconnectTimeoutID=-1};a.user1.orbiter.ConnectionMonitor.prototype.doReconnect=function(){var d=this.orbiter.getConnectionManager().getConnectAttemptCount();if(this.autoReconnectAttemptLimit!=-1&&d>0&&d%(this.autoReconnectAttemptLimit+1)==0){this.log.warn("[CONNECTION_MONITOR] Automatic reconnect attempt limit reached. No further automatic connection attempts will be made until the next manual connection attempt.");return}this.stopReconnect();this.log.warn("[CONNECTION_MONITOR] Attempting automatic reconnect. (Next attempt in "+this.autoReconnectFrequency+"ms.)");var c=this;var e=this.reconnectTimerListener;this.autoReconnectTimeoutID=setTimeout(function(){c.autoReconnectTimeoutID=-1;e.call(c)},this.autoReconnectFrequency);this.orbiter.connect()};a.user1.orbiter.ConnectionMonitor.prototype.restoreDefaults=function(){this.setAutoReconnectFrequency(a.user1.orbiter.ConnectionMonitor.DEFAULT_AUTORECONNECT_FREQUENCY);this.setAutoReconnectAttemptLimit(a.user1.orbiter.ConnectionMonitor.DEFAULT_AUTORECONNECT_ATTEMPT_LIMIT);this.setConnectionTimeout(a.user1.orbiter.ConnectionMonitor.DEFAULT_CONNECTION_TIMEOUT);this.setHeartbeatFrequency(a.user1.orbiter.ConnectionMonitor.DEFAULT_HEARTBEAT_FREQUENCY)};a.user1.orbiter.ConnectionMonitor.prototype.setHeartbeatFrequency=function(c){if(c>=a.user1.orbiter.ConnectionMonitor.MIN_HEARTBEAT_FREQUENCY){this.heartBeatFrequency=c;this.log.info("[CONNECTION_MONITOR] Heartbeat frequency set to "+c+" ms.");if(c>=a.user1.orbiter.ConnectionMonitor.MIN_HEARTBEAT_FREQUENCY&&c<1000){this.log.info("[CONNECTION_MONITOR] HEARTBEAT FREQUENCY WARNING: "+c+" ms. Current frequency will generate "+(Math.floor((1000/c)*10)/10)+" messages per second per connected client.")}if(this.orbiter.isReady()){this.startHeartbeat()}}else{this.log.warn("[CONNECTION_MONITOR] Invalid heartbeat frequency specified: "+c+". Frequency must be "+a.user1.orbiter.ConnectionMonitor.MIN_HEARTBEAT_FREQUENCY+" or greater.")}};a.user1.orbiter.ConnectionMonitor.prototype.getHeartbeatFrequency=function(){return this.heartBeatFrequency};a.user1.orbiter.ConnectionMonitor.prototype.setAutoReconnectFrequency=function(c){if(c==-1){this.autoReconnectFrequency=c;this.stopReconnect()}else{if(c>-1){this.autoReconnectFrequency=c;this.log.info("[CONNECTION_MONITOR] Auto-reconnect frequency set to "+c+" ms.");if(c<1000){this.log.info("[CONNECTION_MONITOR] RECONNECT FREQUENCY WARNING: "+c+" ms. Current frequency will cause "+(c==0?"1000":(Math.floor((1000/c)*10)/10))+" reconnection attempts per second.")}}else{this.log.warn("[CONNECTION_MONITOR] Invalid reconnect frequency specified: "+c+". Frequency must -1 or greater.")}}};a.user1.orbiter.ConnectionMonitor.prototype.getAutoReconnectFrequency=function(){return this.autoReconnectFrequency};a.user1.orbiter.ConnectionMonitor.prototype.setAutoReconnectAttemptLimit=function(c){if(c<-1||c==0){this.log.warn("[CONNECTION_MONITOR] Invalid Auto-reconnect attempt limit specified: "+c+". Limit must -1 or greater than 1.");return}this.autoReconnectAttemptLimit=c;if(c==-1){this.log.info("[CONNECTION_MONITOR] Auto-reconnect attempt limit set to none.")}else{this.log.info("[CONNECTION_MONITOR] Auto-reconnect attempt limit set to "+c+" attempt(s).")}};a.user1.orbiter.ConnectionMonitor.prototype.getAutoReconnectAttemptLimit=function(){return this.autoReconnectAttemptLimit};a.user1.orbiter.ConnectionMonitor.prototype.setConnectionTimeout=function(c){if(c>0){this.connectionTimeout=c;this.log.info("[CONNECTION_MONITOR] Connection timeout set to "+c+" ms.")}else{this.log.warn("[CONNECTION_MONITOR] Invalid connection timeout specified: "+c+". Frequency must be greater than zero.")}};a.user1.orbiter.ConnectionMonitor.prototype.getConnectionTimeout=function(){return this.connectionTimeout};a.user1.orbiter.ConnectionMonitor.prototype.sharePing=function(c){this.sharedPing=c};a.user1.orbiter.ConnectionMonitor.prototype.isPingShared=function(){return this.sharedPing};a.user1.orbiter.ConnectionMonitor.prototype.disableHeartbeatLogging=function(){this.log.addSuppressionTerm("<A>CLIENT_HEARTBEAT</A>");this.log.addSuppressionTerm("<A>_PING</A>");this.log.addSuppressionTerm("[_PING]");this.log.addSuppressionTerm("<![CDATA[_PING]]>")};a.user1.orbiter.ConnectionMonitor.prototype.enableHeartbeatLogging=function(){this.log.removeSuppressionTerm("<A>CLIENT_HEARTBEAT</A>");this.log.removeSuppressionTerm("<A>_PING</A>");this.log.removeSuppressionTerm("[_PING]");this.log.removeSuppressionTerm("<![CDATA[_PING]]>")};a.user1.orbiter.ConnectionMonitor.prototype.dispose=function(){this.stopHeartbeat();this.stopReconnect();this.heartbeats=null;this.orbiter.removeEventListener(a.user1.orbiter.OrbiterEvent.READY,this.connectReadyListener);this.orbiter.removeEventListener(a.user1.orbiter.OrbiterEvent.CLOSE,this.connectCloseListener);this.orbiter=null;this.msgManager.removeMessageListener("u7",this.u7);this.msgManager(null);this.log=null};a.user1.orbiter.CoreMessageListener=function(c){this.orbiter=c;this.log=c.getLog();this.registerCoreListeners();this.orbiter.getConnectionManager().addEventListener(a.user1.orbiter.ConnectionManagerEvent.SELECT_CONNECTION,this.selectConnectionListener,this)};a.user1.orbiter.CoreMessageListener.prototype.registerCoreListeners=function(){var c=this.orbiter.getMessageManager();c.addMessageListener(a.user1.orbiter.UPC.RECEIVE_MESSAGE,this.u7,this)};a.user1.orbiter.CoreMessageListener.prototype.selectConnectionListener=function(d){var c=this.orbiter.getMessageManager();if(c.removeListenersOnDisconnect){this.registerCoreListeners()}};a.user1.orbiter.CoreMessageListener.prototype.u7=function(j,p,e,g){var u=this.orbiter.getMessageManager();var c;var k=Array.prototype.slice.call(arguments).slice(4);if(p!=a.user1.orbiter.ReceiveMessageBroadcastType.TO_ROOMS){c=[e].concat(k);u.notifyMessageListeners(j,c);return}var l=u.getMessageListeners(j);var n=a.user1.orbiter.RoomIDParser.getSimpleRoomID(g);var q=a.user1.orbiter.RoomIDParser.getQualifier(g);var h;var t;var s;for(var m=0;m<l.length;m++){s=l[m];t=true;if(s.getForRoomIDs()==null){c=[e,g].concat(k);s.getListenerFunction().apply(s.getThisArg(),c);h=true;t=false;continue}var f=s.getForRoomIDs();var o;var d;var r;for(var m=0;m<f.length;m++){r=f[m];o=a.user1.orbiter.RoomIDParser.getQualifier(r);d=a.user1.orbiter.RoomIDParser.getSimpleRoomID(r);if(o==q&&(d==n||d=="*")){if(f.length==1){c=[e].concat(k)}else{c=[e,g].concat(k)}s.getListenerFunction().apply(s.getThisArg(),c);h=true;t=false;break}}if(t){this.log.debug("Message listener ignored message: "+j+". Listener registered to receive messages sent to: "+s.getForRoomIDs()+", but message was sent to: "+g)}}if(!h){this.log.warn("No message listener handled incoming message: "+j+", sent to: "+g)}};a.user1.orbiter.OrbiterEvent=function(d,c){a.user1.events.Event.call(this,d);this.serverUPCVersion=c};a.user1.utils.extend(a.user1.orbiter.OrbiterEvent,a.user1.events.Event);a.user1.orbiter.OrbiterEvent.READY="READY";a.user1.orbiter.OrbiterEvent.CLOSE="CLOSE";a.user1.orbiter.OrbiterEvent.PROTOCOL_INCOMPATIBLE="PROTOCOL_INCOMPATIBLE";a.user1.orbiter.OrbiterEvent.prototype.getServerUPCVersion=function(){return this.serverUPCVersion};a.user1.orbiter.OrbiterEvent.prototype.toString=function(){return"[object OrbiterEvent]"};a.user1.orbiter.Orbiter=function(){a.user1.events.EventDispatcher.call(this);this.window=typeof window=="undefined"?null:window;this.system=new a.user1.orbiter.System(this.window);this.log=new a.user1.logger.Logger();if(typeof navigator!="undefined"){this.log.info("User Agent: "+navigator.userAgent+" "+navigator.platform)}this.log.info("Union Client Version: "+this.system.getClientType()+" "+this.system.getClientVersion().toStringVerbose());this.log.info("Client UPC Protocol Version: "+this.system.getUPCVersion().toString());this.consoleLogger=null;if(!this.system.isJavaScriptCompatible()){this.log.fatal("[ORBITERMICRO] JavaScript version incompatibility detected. Quitting.");return}this.connectionMan=new a.user1.orbiter.ConnectionManager(this);this.messageManager=new a.user1.orbiter.MessageManager(this.log,this.connectionMan);this.coreMsgListener=new a.user1.orbiter.CoreMessageListener(this);this.connectionMan.addEventListener(a.user1.orbiter.ConnectionManagerEvent.READY,this._readyListener,this);this.connectionMan.addEventListener(a.user1.orbiter.ConnectionManagerEvent.CONNECT_FAILURE,this._connectFailureListener,this);this.connectionMan.addEventListener(a.user1.orbiter.ConnectionManagerEvent.DISCONNECT,this._disconnectListener,this);this.connectionMonitor=new a.user1.orbiter.ConnectionMonitor(this);this.connectionMonitor.restoreDefaults();this.clientID="";this.sessionID="";this.selfClient={};this.selfClient.ping=-1;this.selfClient.getPing=function(){return this.ping};this.connectionMan.addEventListener(a.user1.orbiter.ConnectionManagerEvent.SELECT_CONNECTION,this._selectConnectionListener,this);this.httpFailoverEnabled=true;this.log.info("[ORBITERMICRO] Initialization complete.")};a.user1.utils.extend(a.user1.orbiter.Orbiter,a.user1.events.EventDispatcher);a.user1.orbiter.Orbiter.DEFAULT_READY_TIMEOUT=10000;a.user1.orbiter.Orbiter.prototype.getClientID=function(){return this.clientID};a.user1.orbiter.Orbiter.prototype.self=function(){return this.selfClient};a.user1.orbiter.Orbiter.prototype.setSessionID=function(c){this.sessionID=c};a.user1.orbiter.Orbiter.prototype.getSessionID=function(){return this.sessionID==null?"":this.sessionID};a.user1.orbiter.Orbiter.prototype.u29=function(c){this.clientID=c};a.user1.orbiter.Orbiter.prototype.u66=function(g,f,e,d){var c=new a.user1.orbiter.VersionNumber();c.fromVersionString(e);if(d=="false"){this.dispatchProtocolIncompatible(c)}};a.user1.orbiter.Orbiter.prototype.buildConnection=function(g,d,f,h){var c;switch(f){case a.user1.orbiter.ConnectionType.HTTP:if(this.system.hasHTTPDirectConnection()){c=new a.user1.orbiter.HTTPDirectConnection()}else{c=new a.user1.orbiter.HTTPIFrameConnection()}break;case a.user1.orbiter.ConnectionType.WEBSOCKET:c=new a.user1.orbiter.WebSocketConnection();break;default:throw new Error("[ORBITER] Error at buildConnection(). Invalid type specified: ["+f+"]")}try{c.setServer(g,d)}catch(i){this.log.error("[CONNECTION] "+c.toString()+" "+i)}finally{this.connectionMan.addConnection(c);if(c instanceof a.user1.orbiter.HTTPConnection){c.setSendDelay(h)}}};a.user1.orbiter.Orbiter.prototype.connect=function(c){if(c!=null){this.setServer.apply(this,arguments)}this.log.info("[ORBITER] Connecting to Union...");this.connectionMan.connect()};a.user1.orbiter.Orbiter.prototype.disconnect=function(){this.connectionMan.disconnect()};a.user1.orbiter.Orbiter.prototype.setServer=function(d){if(d!=null&&arguments.length>1){if(this.connectionMan.getConnections().length>0){this.connectionMan.removeAllConnections()}if(this.system.hasWebSocket()){for(var c=1;c<arguments.length;c++){this.buildConnection(d,arguments[c],a.user1.orbiter.ConnectionType.WEBSOCKET,-1)}}else{this.log.info("[ORBITERMICRO] WebSocket not found in host environment. Trying HTTP.")}if(this.isHTTPFailoverEnabled()||!this.system.hasWebSocket()){for(c=1;c<arguments.length;c++){this.buildConnection(d,arguments[c],a.user1.orbiter.ConnectionType.HTTP,a.user1.orbiter.HTTPConnection.DEFAULT_SEND_DELAY)}}}else{this.log.error("[ORBITERMICRO] setServer() failed. Invalid host or port supplied ["+arguments+"].")}};a.user1.orbiter.Orbiter.prototype.isReady=function(){return this.connectionMan.isReady()};a.user1.orbiter.Orbiter.prototype.enableHTTPFailover=function(){this.httpFailoverEnabled=true};a.user1.orbiter.Orbiter.prototype.disableHTTPFailover=function(){this.httpFailoverEnabled=false};a.user1.orbiter.Orbiter.prototype.isHTTPFailoverEnabled=function(){return this.httpFailoverEnabled};a.user1.orbiter.Orbiter.prototype._disconnectListener=function(c){this.clientID="";this.dispatchClose()};a.user1.orbiter.Orbiter.prototype._connectFailureListener=function(c){this.clientID="";this.dispatchClose()};a.user1.orbiter.Orbiter.prototype._readyListener=function(c){this.log.info("[ORBITER] Orbiter now connected and ready.");this.dispatchReady()};a.user1.orbiter.Orbiter.prototype._selectConnectionListener=function(c){this.messageManager.addMessageListener("u29",this.u29,this);this.messageManager.addMessageListener("u66",this.u66,this)};a.user1.orbiter.Orbiter.prototype.getLog=function(){return this.log};a.user1.orbiter.Orbiter.prototype.getMessageManager=function(){return this.messageManager};a.user1.orbiter.Orbiter.prototype.getConnectionManager=function(){return this.connectionMan};a.user1.orbiter.Orbiter.prototype.getConnectionMonitor=function(){return this.connectionMonitor};a.user1.orbiter.Orbiter.prototype.getSystem=function(){return this.system};a.user1.orbiter.Orbiter.prototype.enableConsole=function(){if(this.consoleLogger==null){this.consoleLogger=new a.user1.logger.ConsoleLogger(this.log)}};a.user1.orbiter.Orbiter.prototype.disableConsole=function(){if(this.consoleLogger!=null){this.consoleLogger.dispose();this.consoleLogger=null}};a.user1.orbiter.Orbiter.prototype.dispatchReady=function(){this.dispatchEvent(new a.user1.orbiter.OrbiterEvent(a.user1.orbiter.OrbiterEvent.READY))};a.user1.orbiter.Orbiter.prototype.dispatchClose=function(){this.dispatchEvent(new a.user1.orbiter.OrbiterEvent(a.user1.orbiter.OrbiterEvent.CLOSE))};a.user1.orbiter.Orbiter.prototype.dispatchProtocolIncompatible=function(){this.dispatchEvent(new a.user1.orbiter.OrbiterEvent(a.user1.orbiter.OrbiterEvent.PROTOCOL_INCOMPATIBLE))};a.user1.orbiter.Orbiter.prototype.toString=function(){return"[object Orbiter]"};a.user1.orbiter.ConnectionState=new Object();a.user1.orbiter.ConnectionState.UNKNOWN=-1;a.user1.orbiter.ConnectionState.NOT_CONNECTED=0;a.user1.orbiter.ConnectionState.READY=1;a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS=2;a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS=3;a.user1.orbiter.ConnectionState.LOGGED_IN=4;a.user1.orbiter.ConnectionEvent=function(e,g,f,d,c){a.user1.events.Event.call(this,e);this.upc=g;this.data=f;this.connection=d;this.status=c};a.user1.utils.extend(a.user1.orbiter.ConnectionEvent,a.user1.events.Event);a.user1.orbiter.ConnectionEvent.BEGIN_CONNECT="BEGIN_CONNECT";a.user1.orbiter.ConnectionEvent.BEGIN_HANDSHAKE="BEGIN_HANDSHAKE";a.user1.orbiter.ConnectionEvent.READY="READY";a.user1.orbiter.ConnectionEvent.CONNECT_FAILURE="CONNECT_FAILURE";a.user1.orbiter.ConnectionEvent.CLIENT_KILL_CONNECT="CLIENT_KILL_CONNECT";a.user1.orbiter.ConnectionEvent.SERVER_KILL_CONNECT="SERVER_KILL_CONNECT";a.user1.orbiter.ConnectionEvent.DISCONNECT="DISCONNECT";a.user1.orbiter.ConnectionEvent.RECEIVE_UPC="RECEIVE_UPC";a.user1.orbiter.ConnectionEvent.SEND_DATA="SEND_DATA";a.user1.orbiter.ConnectionEvent.RECEIVE_DATA="RECEIVE_DATA";a.user1.orbiter.ConnectionEvent.SESSION_TERMINATED="SESSION_TERMINATED";a.user1.orbiter.ConnectionEvent.SESSION_NOT_FOUND="SESSION_NOT_FOUND";a.user1.orbiter.ConnectionEvent.prototype.getUPC=function(){return this.upc};a.user1.orbiter.ConnectionEvent.prototype.getData=function(){return this.data};a.user1.orbiter.ConnectionEvent.prototype.getStatus=function(){return this.status};a.user1.orbiter.ConnectionEvent.prototype.toString=function(){return"[object ConnectionEvent]"};a.user1.orbiter.ConnectionType=new Object();a.user1.orbiter.ConnectionType.HTTP="HTTP";a.user1.orbiter.ConnectionType.WEBSOCKET="WEBSOCKET";a.user1.orbiter.Connection=function(e,c,d){a.user1.events.EventDispatcher.call(this);this.mostRecentConnectAchievedReady=false;this.mostRecentConnectTimedOut=false;this.readyCount=0;this.connectAttemptCount=0;this.connectAbortCount=0;this.readyTimeoutID=0;this.readyTimeout=0;this.orbiter=null;this.disposed=false;this.setServer(e,c);this.connectionType=d;this.connectionState=a.user1.orbiter.ConnectionState.NOT_CONNECTED};a.user1.utils.extend(a.user1.orbiter.Connection,a.user1.events.EventDispatcher);a.user1.orbiter.Connection.prototype.setOrbiter=function(c){if(this.orbiter!=null){this.orbiter.getMessageManager().removeMessageListener("u63",this.u63);this.orbiter.getMessageManager().removeMessageListener("u66",this.u66);this.orbiter.getMessageManager().removeMessageListener("u84",this.u84);this.orbiter.getMessageManager().removeMessageListener("u85",this.u85)}this.orbiter=c};a.user1.orbiter.Connection.prototype.connect=function(){this.disconnect();this.orbiter.getLog().info("Attempting connection via "+this.toString()+".");this.connectAttemptCount++;this.mostRecentConnectAchievedReady=false;this.mostRecentConnectTimedOut=false;this.connectionState=a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS;this.startReadyTimer();this.dispatchBeginConnect()};a.user1.orbiter.Connection.prototype.disconnect=function(){var c=this.connectionState;if(c!=a.user1.orbiter.ConnectionState.NOT_CONNECTED){this.deactivateConnection();if(c==a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS){this.connectAbortCount++;this.dispatchConnectFailure("Client closed connection before READY state was achieved.")}else{this.dispatchClientKillConnect()}}};a.user1.orbiter.Connection.prototype.deactivateConnection=function(){this.connectionState=a.user1.orbiter.ConnectionState.NOT_CONNECTED;this.stopReadyTimer();this.orbiter.setSessionID("")};a.user1.orbiter.Connection.prototype.setServer=function(d,c){this.host=d;if(c<1||c>65536){throw new Error("Illegal port specified ["+c+"]. Must be greater than 0 and less than 65537.")}this.port=c};a.user1.orbiter.Connection.prototype.getHost=function(){return this.host};a.user1.orbiter.Connection.prototype.getPort=function(){return this.port};a.user1.orbiter.Connection.prototype.getType=function(){return this.connectionType};a.user1.orbiter.Connection.prototype.beginReadyHandshake=function(){this.dispatchBeginHandshake();if(!this.orbiter.getMessageManager().hasMessageListener("u63",this.u63)){this.orbiter.getMessageManager().addMessageListener("u63",this.u63,this);this.orbiter.getMessageManager().addMessageListener("u66",this.u66,this);this.orbiter.getMessageManager().addMessageListener("u84",this.u84,this);this.orbiter.getMessageManager().addMessageListener("u85",this.u85,this)}this.sendHello()};a.user1.orbiter.Connection.prototype.sendHello=function(){var c=this.buildHelloMessage();this.orbiter.getLog().debug(this.toString()+" Sending CLIENT_HELLO: "+c);this.transmitHelloMessage(c)};a.user1.orbiter.Connection.prototype.buildHelloMessage=function(){var c="<U><M>u65</M><L><A>"+this.orbiter.getSystem().getClientType()+"</A><A>"+(typeof navigator!="undefined"?navigator.userAgent+";":"")+this.orbiter.getSystem().getClientVersion().toStringVerbose()+"</A><A>"+this.orbiter.getSystem().getUPCVersion().toString()+"</A></L></U>";return c};a.user1.orbiter.Connection.prototype.transmitHelloMessage=function(c){this.send(c)};a.user1.orbiter.Connection.prototype.readyTimerListener=function(){this.stopReadyTimer();if(this.connectionState==a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS){this.orbiter.getLog().warn("[CONNECTION] "+this.toString()+" Failed to achieve ready state after "+this.readyTimeout+"ms. Aborting connection...");this.mostRecentConnectTimedOut=true;this.disconnect()}};a.user1.orbiter.Connection.prototype.stopReadyTimer=function(){if(this.readyTimeoutID!=-1){clearTimeout(this.readyTimeoutID)}};a.user1.orbiter.Connection.prototype.startReadyTimer=function(){var d=this;var e=this.readyTimerListener;this.stopReadyTimer();this.readyTimeout=this.orbiter.getConnectionManager().getReadyTimeout();var c=this;this.readyTimeoutID=setTimeout(function(){e.call(d)},c.readyTimeout)};a.user1.orbiter.Connection.prototype.getReadyCount=function(){return this.readyCount};a.user1.orbiter.Connection.prototype.isReady=function(){return this.connectionState==a.user1.orbiter.ConnectionState.READY};a.user1.orbiter.Connection.prototype.isValid=function(){if(this.mostRecentConnectAchievedReady){this.orbiter.getLog().debug(this.toString()+" Connection is valid because its last connection attempt succeeded.");return true}if(this.connectAttemptCount==0){this.orbiter.getLog().debug(this.toString()+" Connection is valid because it has either never attempted to connect, or has not attempted to connect since its last successful connection.");return true}if((this.connectAttemptCount>0)&&(this.connectAttemptCount==this.connectAbortCount)&&!this.mostRecentConnectTimedOut){this.orbiter.getLog().debug(this.toString()+" Connection is valid because either all connection attempts ever or all connection attempts since its last successful connection were aborted before the ready timeout was reached.");return true}this.orbiter.getLog().debug(this.toString()+" Connection is not valid; its most recent connection failed to achieve a ready state.");return false};a.user1.orbiter.Connection.prototype.u63=function(){this.stopReadyTimer();this.connectionState=a.user1.orbiter.ConnectionState.READY;this.mostRecentConnectAchievedReady=true;this.readyCount++;this.connectAttemptCount=0;this.connectAbortCount=0;this.dispatchReady()};a.user1.orbiter.Connection.prototype.u66=function(d,f,e,c){this.orbiter.setSessionID(f)};a.user1.orbiter.Connection.prototype.u84=function(){this.dispatchSessionTerminated()};a.user1.orbiter.Connection.prototype.u85=function(){this.dispatchSessionNotFound()};a.user1.orbiter.Connection.prototype.toString=function(){return"["+this.connectionType+", host: "+this.host+", port: "+this.port+"]"};a.user1.orbiter.Connection.prototype.dispatchSendData=function(c){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.SEND_DATA,null,c,this))};a.user1.orbiter.Connection.prototype.dispatchReceiveData=function(c){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.RECEIVE_DATA,null,c,this))};a.user1.orbiter.Connection.prototype.dispatchConnectFailure=function(c){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.CONNECT_FAILURE,null,null,this,c))};a.user1.orbiter.Connection.prototype.dispatchBeginConnect=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.BEGIN_CONNECT,null,null,this))};a.user1.orbiter.Connection.prototype.dispatchBeginHandshake=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.BEGIN_HANDSHAKE,null,null,this))};a.user1.orbiter.Connection.prototype.dispatchReady=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.READY,null,null,this))};a.user1.orbiter.Connection.prototype.dispatchServerKillConnect=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.SERVER_KILL_CONNECT,null,null,this));this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.DISCONNECT,null,null,this))};a.user1.orbiter.Connection.prototype.dispatchClientKillConnect=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.CLIENT_KILL_CONNECT,null,null,this));this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.DISCONNECT,null,null,this))};a.user1.orbiter.Connection.prototype.dispatchSessionTerminated=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.SESSION_TERMINATED,null,null,this))};a.user1.orbiter.Connection.prototype.dispatchSessionNotFound=function(){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.SESSION_NOT_FOUND,null,null,this))};a.user1.orbiter.Connection.prototype.dispose=function(){this.disposed=true;this.messageManager.removeMessageListener("u63",this.u63);this.messageManager.removeMessageListener("u66",this.u66);this.messageManager.removeMessageListener("u84",this.u84);this.messageManager.removeMessageListener("u85",this.u85);this.stopReadyTimer();this.readyTimer=null;this.orbiter=null};a.user1.orbiter.WebSocketConnection=function(d,c){a.user1.orbiter.Connection.call(this,d,c,a.user1.orbiter.ConnectionType.WEBSOCKET);this.socket=null};a.user1.utils.extend(a.user1.orbiter.WebSocketConnection,a.user1.orbiter.Connection);a.user1.orbiter.WebSocketConnection.prototype.getNewSocket=function(){this.deactivateSocket(this.socket);if(typeof MozWebSocket!="undefined"){this.socket=new MozWebSocket("ws://"+this.host+":"+this.port)}else{this.socket=new WebSocket("ws://"+this.host+":"+this.port)}var c=this;this.socket.onopen=function(d){c.connectListener(d)};this.socket.onmessage=function(d){c.dataListener(d)};this.socket.onclose=function(d){c.closeListener(d)};this.socket.onerror=function(d){c.ioErrorListener(d)}};a.user1.orbiter.WebSocketConnection.prototype.deactivateSocket=function(c){if(c==null){return}this.socket.onopen=null;this.socket.onmessage=null;this.socket.onclose=null;this.socket.onerror=null;try{c.close()}catch(d){}this.socket=null};a.user1.orbiter.WebSocketConnection.prototype.connect=function(){a.user1.orbiter.Connection.prototype.connect.call(this);try{this.getNewSocket()}catch(c){this.deactivateConnection();this.dispatchConnectFailure(c.toString())}};a.user1.orbiter.WebSocketConnection.prototype.deactivateConnection=function(){this.orbiter.getLog().debug("[CONNECTION] "+this.toString()+" Deactivating...");this.connectionState=a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS;this.deactivateSocket(this.socket);a.user1.orbiter.Connection.prototype.deactivateConnection.call(this)};a.user1.orbiter.WebSocketConnection.prototype.connectListener=function(c){if(this.disposed){return}this.orbiter.getLog().debug(this.toString()+" Socket connected.");this.beginReadyHandshake()};a.user1.orbiter.WebSocketConnection.prototype.closeListener=function(d){if(this.disposed){return}var c=this.connectionState;this.deactivateConnection();if(c==a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS){this.dispatchConnectFailure("WebSocket onclose: Server closed connection before READY state was achieved.")}else{this.dispatchServerKillConnect()}};a.user1.orbiter.WebSocketConnection.prototype.ioErrorListener=function(d){if(this.disposed){return}var c=this.connectionState;this.deactivateConnection();if(c==a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS){this.dispatchConnectFailure("WebSocket onerror: Server closed connection before READY state was achieved.")}else{this.dispatchServerKillConnect()}};a.user1.orbiter.WebSocketConnection.prototype.dataListener=function(d){if(this.disposed){return}var c=d.data;this.dispatchReceiveData(c);if(c.indexOf("<U>")==0){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.RECEIVE_UPC,c))}else{this.orbiter.getLog().error(this.toString()+" Received invalid message (not UPC or malformed UPC): "+c)}};a.user1.orbiter.WebSocketConnection.prototype.send=function(c){this.dispatchSendData(c);this.socket.send(c)};a.user1.orbiter.WebSocketConnection.prototype.dispose=function(){a.user1.orbiter.Connection.prototype.dispose.call(this);this.deactivateSocket(this.socket)};a.user1.orbiter.HTTPConnection=function(d,c){a.user1.orbiter.Connection.call(this,d,c,a.user1.orbiter.ConnectionType.HTTP);this.sendDelayTimerEnabled=true;this.sendDelayTimeoutID=-1;this.sendDelayTimerRunning=false;this.sendDelay=a.user1.orbiter.HTTPConnection.DEFAULT_SEND_DELAY;this.messageQueue=new Array();this.retryDelay=500;this.retryHelloTimeoutID=-1;this.retryIncomingTimeoutID=-1;this.retryOutgoingTimeoutID=-1;this.helloResponsePending=false;this.outgoingResponsePending=false;this.addEventListener(a.user1.orbiter.ConnectionEvent.SESSION_TERMINATED,this.sessionTerminatedListener,this);this.addEventListener(a.user1.orbiter.ConnectionEvent.SESSION_NOT_FOUND,this.sessionNotFoundListener,this)};a.user1.utils.extend(a.user1.orbiter.HTTPConnection,a.user1.orbiter.Connection);a.user1.orbiter.HTTPConnection.DEFAULT_SEND_DELAY=300;a.user1.orbiter.HTTPConnection.prototype.doRequestDeactivation=a.user1.utils.abstractError;a.user1.orbiter.HTTPConnection.prototype.doSendHello=a.user1.utils.abstractError;a.user1.orbiter.HTTPConnection.prototype.doRetryHello=a.user1.utils.abstractError;a.user1.orbiter.HTTPConnection.prototype.doSendOutgoing=a.user1.utils.abstractError;a.user1.orbiter.HTTPConnection.prototype.doRetryOutgoing=a.user1.utils.abstractError;a.user1.orbiter.HTTPConnection.prototype.doSendIncoming=a.user1.utils.abstractError;a.user1.orbiter.HTTPConnection.prototype.doRetryIncoming=a.user1.utils.abstractError;a.user1.orbiter.HTTPConnection.prototype.doDispose=a.user1.utils.abstractError;a.user1.orbiter.HTTPConnection.prototype.connect=function(){a.user1.orbiter.Connection.prototype.connect.call(this)};a.user1.orbiter.HTTPConnection.prototype.deactivateConnection=function(){this.orbiter.getLog().debug("[CONNECTION] "+this.toString()+" Deactivating...");this.connectionState=a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS;this.stopSendDelayTimer();if(this.retryHelloTimeoutID!=-1){this.orbiter.getLog().debug("[CONNECTION] "+this.toString()+" Cancelling scheduled hello-request retry.");clearTimeout(this.retryHelloTimeoutID);this.retryHelloTimeoutID=-1}if(this.retryIncomingTimeoutID!=-1){this.orbiter.getLog().debug("[CONNECTION] "+this.toString()+" Cancelling scheduled incoming-request retry.");clearTimeout(this.retryIncomingTimeoutID);this.retryIncomingTimeoutID=-1}if(this.retryOutgoingTimeoutID!=-1){this.orbiter.getLog().debug("[CONNECTION] "+this.toString()+" Cancelling scheduled outgoing-request retry.");clearTimeout(this.retryOutgoingTimeoutID);this.retryOutgoingTimeoutID=-1}this.deactivateHTTPRequests();a.user1.orbiter.Connection.prototype.deactivateConnection.call(this)};a.user1.orbiter.HTTPConnection.prototype.deactivateHTTPRequests=function(){this.orbiter.getLog().debug("[CONNECTION] "+this.toString()+" Closing all pending HTTP requests.");this.doRequestDeactivation();this.helloResponsePending=false;this.outgoingResponsePending=false};a.user1.orbiter.HTTPConnection.prototype.sessionTerminatedListener=function(d){var c=this.connectionState;this.deactivateConnection();if(c==a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS){this.dispatchConnectFailure("Server terminated session before READY state was achieved.")}else{this.dispatchServerKillConnect()}};a.user1.orbiter.HTTPConnection.prototype.sessionNotFoundListener=function(d){var c=this.connectionState;this.deactivateConnection();if(c==a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS){this.dispatchConnectFailure("Client attempted to reestablish an expired session or establish an unknown session.")}else{this.dispatchServerKillConnect()}};a.user1.orbiter.HTTPConnection.prototype.sendDelayTimerListener=function(){this.sendDelayTimerRunning=false;if(this.messageQueue.length>0){this.flushMessageQueue()}else{}};a.user1.orbiter.HTTPConnection.prototype.stopSendDelayTimer=function(){if(this.sendDelayTimeoutID!=-1){clearTimeout(this.sendDelayTimeoutID)}this.sendDelayTimeoutID=-1};a.user1.orbiter.HTTPConnection.prototype.startSendDelayTimer=function(){this.stopSendDelayTimer();var c=this;var d=this.sendDelayTimerListener;this.sendDelayTimerRunning=true;this.sendDelayTimeoutID=setTimeout(function(){d.call(c)},this.sendDelay)};a.user1.orbiter.HTTPConnection.prototype.setSendDelay=function(c){if(c>0){if((c!=this.sendDelay)){this.sendDelay=c;this.orbiter.getLog().debug("[CONNECTION] "+this.toString()+" Send delay set to: ["+c+"].")}this.sendDelayTimerEnabled=true}else{if(c==-1){this.orbiter.getLog().debug("[CONNECTION] "+toString()+" Send delay disabled.");this.sendDelayTimerEnabled=false;this.stopSendDelayTimer()}else{throw new Error("[CONNECTION]"+this.toString()+" Invalid send-delay specified: ["+c+"].")}}};a.user1.orbiter.HTTPConnection.prototype.getSendDelay=function(){return this.sendDelay};a.user1.orbiter.HTTPConnection.prototype.setRetryDelay=function(c){if(c>-1){if(c!=this.retryDelay){this.retryDelay=c;this.orbiter.getLog().debug("[CONNECTION] "+this.toString()+" Retry delay set to: ["+c+"].")}}else{throw new Error("[CONNECTION]"+this.toString()+" Invalid retry delay specified: ["+c+"].")}};a.user1.orbiter.HTTPConnection.prototype.send=function(c){if(!this.sendDelayTimerRunning){this.messageQueue.push(c);this.flushMessageQueue()}else{this.messageQueue.push(c)}};a.user1.orbiter.HTTPConnection.prototype.flushMessageQueue=function(){if(!this.outgoingResponsePending){this.openNewOutgoingRequest(this.messageQueue.join(""));this.messageQueue=new Array()}else{}};a.user1.orbiter.HTTPConnection.prototype.transmitHelloMessage=function(c){this.dispatchSendData(c);this.helloResponsePending=true;this.doSendHello(c)};a.user1.orbiter.HTTPConnection.prototype.helloCompleteListener=function(d){if(this.disposed){return}if(this.helloResponsePending){this.helloResponsePending=false;this.processIncomingData(d);var c=this;setTimeout(function(){c.openNewIncomingRequest()},0)}else{if(this.connectionState==a.user1.orbiter.ConnectionState.NOT_CONNECTED){this.orbiter.getLog().error("[CONNECTION]"+toString()+" u66 (SERVER_HELLO) received, but client is not connected. Ignoring.")}else{this.orbiter.getLog().error("[CONNECTION]"+toString()+" Redundant u66 (SERVER_HELLO) received. Ignoring.")}}};a.user1.orbiter.HTTPConnection.prototype.helloErrorListener=function(){if(this.disposed){return}if(this.retryHelloTimeoutID!=-1){return}if(this.connectionState!=a.user1.orbiter.ConnectionState.CONNECTION_IN_PROGRESS){this.orbiter.getLog().error("[CONNECTION]"+this.toString()+" u65 (CLIENT_HELLO) request failed. Connection is no longer in progress, so no retry scheduled.");return}this.orbiter.getLog().error("[CONNECTION]"+this.toString()+" u65 (CLIENT_HELLO) request failed. Retrying in "+this.retryDelay+"ms.");var c=this;this.retryHelloTimeoutID=setTimeout(function(){c.retryHelloTimeoutID=-1;c.doRetryHello()},this.retryDelay)};a.user1.orbiter.HTTPConnection.prototype.openNewOutgoingRequest=function(c){this.dispatchSendData(c);this.outgoingResponsePending=true;this.doSendOutgoing(c);if(this.sendDelayTimerEnabled==true){this.startSendDelayTimer()}};a.user1.orbiter.HTTPConnection.prototype.outgoingCompleteListener=function(){if(this.disposed){return}this.outgoingResponsePending=false;if(!this.sendDelayTimerRunning&&this.messageQueue.length>0){var c=this;setTimeout(function(){c.flushMessageQueue()},0)}};a.user1.orbiter.HTTPConnection.prototype.outgoingErrorListener=function(){if(this.disposed){return}if(this.retryOutgoingTimeoutID!=-1){return}if(this.connectionState==a.user1.orbiter.ConnectionState.NOT_CONNECTED||this.connectionState==a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS){this.orbiter.getLog().error("[CONNECTION]"+this.toString()+" Outgoing request failed. Connection is closed, so no retry scheduled.");return}this.orbiter.getLog().error("[CONNECTION]"+this.toString()+" Outgoing request failed. Retrying in "+this.retryDelay+"ms.");var c=this;this.retryOutgoingTimeoutID=setTimeout(function(){c.retryOutgoingTimeoutID=-1;if(c.disposed||c.connectionState==a.user1.orbiter.ConnectionState.NOT_CONNECTED||c.connectionState==a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS){return}c.doRetryOutgoing()},this.retryDelay)};a.user1.orbiter.HTTPConnection.prototype.openNewIncomingRequest=function(){this.doSendIncoming()};a.user1.orbiter.HTTPConnection.prototype.incomingCompleteListener=function(d){if(this.disposed||this.connectionState==a.user1.orbiter.ConnectionState.NOT_CONNECTED||this.connectionState==a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS){return}var c=this;setTimeout(function(){c.processIncomingData(d);if(c.disposed||c.connectionState==a.user1.orbiter.ConnectionState.NOT_CONNECTED||c.connectionState==a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS){return}c.openNewIncomingRequest()},0)};a.user1.orbiter.HTTPConnection.prototype.incomingErrorListener=function(){if(this.disposed){return}if(this.retryIncomingTimeoutID!=-1){return}if(this.connectionState==a.user1.orbiter.ConnectionState.NOT_CONNECTED||this.connectionState==a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS){this.orbiter.getLog().error("[CONNECTION]"+this.toString()+" Incoming request failed. Connection is closed, so no retry scheduled.");return}this.orbiter.getLog().error("[CONNECTION]"+this.toString()+" Incoming request failed. Retrying in "+this.retryDelay+"ms.");var c=this;this.retryIncomingTimeoutID=setTimeout(function(){c.retryIncomingTimeoutID=-1;if(c.disposed||c.connectionState==a.user1.orbiter.ConnectionState.NOT_CONNECTED||c.connectionState==a.user1.orbiter.ConnectionState.DISCONNECTION_IN_PROGRESS){return}c.doRetryIncoming()},this.retryDelay)};a.user1.orbiter.HTTPConnection.prototype.processIncomingData=function(f){if(this.disposed){return}var e;this.dispatchReceiveData(f);var g=new Array();var c=f.indexOf("</U>");if(c==-1&&f.length>0){this.orbiter.getLog().error("Invalid message received. No UPC found: ["+f+"]");if(!this.isReady()){this.disconnect();return}}while(c!=-1){g.push(f.substring(0,c+4));f=f.substring(c+4);c=f.indexOf("</U>")}for(var d=0;d<g.length;d++){this.dispatchEvent(new a.user1.orbiter.ConnectionEvent(a.user1.orbiter.ConnectionEvent.RECEIVE_UPC,g[d]))}};a.user1.orbiter.HTTPConnection.prototype.toString=function(){return"["+this.connectionType+", host: "+this.host+", port: "+this.port+", send-delay: "+this.getSendDelay()+"]"};a.user1.orbiter.HTTPConnection.prototype.dispose=function(){this.doDispose();this.stopSendDelayTimer();a.user1.orbiter.Connection.prototype.dispose.call(this)};a.user1.orbiter.HTTPIFrameConnection=function(d,c){a.user1.orbiter.HTTPConnection.call(this,d,c);this.postMessageInited=false;this.iFrameReady=false};a.user1.utils.extend(a.user1.orbiter.HTTPIFrameConnection,a.user1.orbiter.HTTPConnection);a.user1.orbiter.HTTPIFrameConnection.prototype.initPostMessage=function(){if(this.postMessageInited){throw new Error("[HTTPIFrameConnection] Illegal duplicate initialization attempt.")}var c=this;var f=this.orbiter.window;var e=null;if(f==null){e="[HTTPIFrameConnection] Unable to create connection. No window object found."}else{if(typeof f.addEventListener!="undefined"){f.addEventListener("message",d,false)}else{if(typeof f.attachEvent!="undefined"){f.attachEvent("onmessage",d)}else{e="[HTTPIFrameConnection] Unable to create connection. No event listener registration method found on window object."}}}if(e!=null){this.orbiter.getLog().error(e);throw new Error(e)}function d(g){if(g.origin!=("http://"+c.host+(c.port==80?"":(":"+c.port)))){c.orbiter.getLog().error("[CONNECTION] "+c.toString()+" Ignored message from unknown origin: "+g.origin);return}c.processPostMessage(g.data)}this.postMessageInited=true};a.user1.orbiter.HTTPIFrameConnection.prototype.makeIFrame=function(){if(typeof this.orbiter.window.document=="undefined"){var c="[HTTPIFrameConnection] Unable to create connection. No document object found.";this.orbiter.getLog().error(c);throw new Error(c)}var d=this.orbiter.window.document;this.iFrameReady=false;if(this.iframe!=null){this.postToIFrame("dispose");d.body.removeChild(this.iframe)}this.iframe=d.createElement("iframe");this.iframe.width="0px";this.iframe.height="0px";this.iframe.border="0px";this.iframe.frameBorder="0";this.iframe.style.visibility="hidden";this.iframe.style.display="none";this.iframe.src="http://"+this.host+":"+this.port+"/orbiter";d.body.appendChild(this.iframe)};a.user1.orbiter.HTTPIFrameConnection.prototype.onIFrameReady=function(){this.beginReadyHandshake()};a.user1.orbiter.HTTPIFrameConnection.prototype.postToIFrame=function(d,c){if(this.iframe&&this.iFrameReady){c=c==undefined?"":c;this.iframe.contentWindow.postMessage(d+","+c,"http://"+this.host+":"+this.port)}};a.user1.orbiter.HTTPIFrameConnection.prototype.processPostMessage=function(c){var f=c.indexOf(",");var e=c.substring(0,f);var d=c.substring(f+1);switch(e){case"ready":this.iFrameReady=true;this.onIFrameReady();break;case"hellocomplete":this.helloCompleteListener(d);break;case"helloerror":this.helloErrorListener();break;case"outgoingcomplete":this.outgoingCompleteListener();break;case"outgoingerror":this.outgoingErrorListener();break;case"incomingcomplete":this.incomingCompleteListener(d);break;case"incomingerror":this.incomingErrorListener();break}};a.user1.orbiter.HTTPIFrameConnection.prototype.connect=function(){if(!this.postMessageInited){this.initPostMessage()}a.user1.orbiter.HTTPConnection.prototype.connect.call(this);this.makeIFrame()};a.user1.orbiter.HTTPIFrameConnection.prototype.doRequestDeactivation=function(){this.postToIFrame("deactivate")};a.user1.orbiter.HTTPIFrameConnection.prototype.u66=function(d,f,e,c){a.user1.orbiter.Connection.prototype.u66.call(this,d,f,e,c);if(this.iframe!=null){this.postToIFrame("sessionid",f)}};a.user1.orbiter.HTTPIFrameConnection.prototype.doSendHello=function(c){this.postToIFrame("sendhello",c)};a.user1.orbiter.HTTPIFrameConnection.prototype.doRetryHello=function(){this.postToIFrame("retryhello")};a.user1.orbiter.HTTPIFrameConnection.prototype.doSendOutgoing=function(c){this.postToIFrame("sendoutgoing",c)};a.user1.orbiter.HTTPIFrameConnection.prototype.doRetryOutgoing=function(){this.postToIFrame("retryoutgoing")};a.user1.orbiter.HTTPIFrameConnection.prototype.doSendIncoming=function(){this.postToIFrame("sendincoming")};a.user1.orbiter.HTTPIFrameConnection.prototype.doRetryIncoming=function(){this.postToIFrame("retryincoming")};a.user1.orbiter.HTTPIFrameConnection.prototype.toString=function(){return"[HTTPIFrameConnection, host: "+this.host+", port: "+this.port+", send-delay: "+this.getSendDelay()+"]"};a.user1.orbiter.HTTPIFrameConnection.prototype.doDispose=function(){this.postToIFrame("dispose")};a.user1.orbiter.HTTPDirectConnection=function(d,c){a.user1.orbiter.HTTPConnection.call(this,d,c);this.outgoingRequestID=0;this.incomingRequestID=0;this.lastOutgoingPostData=null;this.lastIncomingPostData=null;this.lastHelloPostData=null;this.pendingRequests=[]};a.user1.utils.extend(a.user1.orbiter.HTTPDirectConnection,a.user1.orbiter.HTTPConnection);a.user1.orbiter.HTTPDirectConnection.prototype.connect=function(){a.user1.orbiter.HTTPConnection.prototype.connect.call(this);this.beginReadyHandshake()};a.user1.orbiter.HTTPDirectConnection.prototype.doSendHello=function(c){this.newHelloRequest(c)};a.user1.orbiter.HTTPDirectConnection.prototype.doRetryHello=function(){this.retryHello()};a.user1.orbiter.HTTPDirectConnection.prototype.newHelloRequest=function(c){this.lastHelloPostData=this.createHelloPostData(encodeURIComponent(c));this.transmitRequest(this.lastHelloPostData,a.user1.orbiter.HTTPDirectConnection.helloRequestReadystatechangeListener,a.user1.orbiter.HTTPDirectConnection.helloRequestErrorListener)};a.user1.orbiter.HTTPDirectConnection.prototype.createHelloPostData=function(c){return"mode=d&data="+c};a.user1.orbiter.HTTPDirectConnection.prototype.retryHello=function(){this.transmitRequest(this.lastHelloPostData,a.user1.orbiter.HTTPDirectConnection.helloRequestReadystatechangeListener,a.user1.orbiter.HTTPDirectConnection.helloRequestErrorListener)};a.user1.orbiter.HTTPDirectConnection.helloRequestReadystatechangeListener=function(d,c){if(d.readyState==4){c.removePendingRequest(d);if(d.status>=200&&d.status<=299){c.helloCompleteListener(d.responseText)}else{c.helloErrorListener()}}};a.user1.orbiter.HTTPDirectConnection.helloRequestErrorListener=function(d,c){c.removePendingRequest(d);c.helloErrorListener()};a.user1.orbiter.HTTPDirectConnection.prototype.doSendOutgoing=function(c){this.newOutgoingRequest(c)};a.user1.orbiter.HTTPDirectConnection.prototype.doRetryOutgoing=function(){this.retryOutgoing()};a.user1.orbiter.HTTPDirectConnection.prototype.newOutgoingRequest=function(c){this.lastOutgoingPostData=this.createOutgoingPostData(encodeURIComponent(c));this.transmitRequest(this.lastOutgoingPostData,a.user1.orbiter.HTTPDirectConnection.outgoingRequestReadystatechangeListener,a.user1.orbiter.HTTPDirectConnection.outgoingRequestErrorListener)};a.user1.orbiter.HTTPDirectConnection.prototype.createOutgoingPostData=function(c){this.outgoingRequestID++;return"rid="+this.outgoingRequestID+"&sid="+this.orbiter.getSessionID()+"&mode=s&data="+c};a.user1.orbiter.HTTPDirectConnection.prototype.retryOutgoing=function(){this.transmitRequest(this.lastOutgoingPostData,a.user1.orbiter.HTTPDirectConnection.outgoingRequestReadystatechangeListener,a.user1.orbiter.HTTPDirectConnection.outgoingRequestErrorListener)};a.user1.orbiter.HTTPDirectConnection.outgoingRequestReadystatechangeListener=function(d,c){if(d.readyState==4){c.removePendingRequest(d);if(d.status>=200&&d.status<=299){c.outgoingCompleteListener()}else{c.outgoingErrorListener()}}};a.user1.orbiter.HTTPDirectConnection.outgoingRequestErrorListener=function(d,c){c.removePendingRequest(d);c.outgoingErrorListener()};a.user1.orbiter.HTTPDirectConnection.prototype.doSendIncoming=function(){this.newIncomingRequest()};a.user1.orbiter.HTTPDirectConnection.prototype.doRetryIncoming=function(){this.retryIncoming()};a.user1.orbiter.HTTPDirectConnection.prototype.newIncomingRequest=function(){this.lastIncomingPostData=this.createIncomingPostData();this.transmitRequest(this.lastIncomingPostData,a.user1.orbiter.HTTPDirectConnection.incomingRequestReadystatechangeListener,a.user1.orbiter.HTTPDirectConnection.incomingRequestErrorListener)};a.user1.orbiter.HTTPDirectConnection.prototype.createIncomingPostData=function(){this.incomingRequestID++;return"rid="+this.incomingRequestID+"&sid="+this.orbiter.getSessionID()+"&mode=c"};a.user1.orbiter.HTTPDirectConnection.prototype.retryIncoming=function(){this.transmitRequest(this.lastIncomingPostData,a.user1.orbiter.HTTPDirectConnection.incomingRequestReadystatechangeListener,a.user1.orbiter.HTTPDirectConnection.incomingRequestErrorListener)};a.user1.orbiter.HTTPDirectConnection.incomingRequestReadystatechangeListener=function(d,c){if(d.readyState==4){c.removePendingRequest(d);if(d.status>=200&&d.status<=299){c.incomingCompleteListener(d.responseText)}else{c.incomingErrorListener()}}};a.user1.orbiter.HTTPDirectConnection.incomingRequestErrorListener=function(d,c){c.removePendingRequest(d);c.incomingErrorListener()};a.user1.orbiter.HTTPDirectConnection.prototype.transmitRequest=function(f,e,g){var c=this;var d;if(typeof XDomainRequest!="undefined"){d=new XDomainRequest();d.onload=function(){d.readyState=4;d.status=200;e(this,c)};d.onerror=function(){g(this,c)};d.ontimeout=function(){g(this,c)};d.onprogress=function(){}}else{var d=new XMLHttpRequest();this.pendingRequests.push(d);d.onreadystatechange=function(){e(this,c)};d.onerror=function(){g(this,c)}}d.open("POST","http://"+this.host+":"+this.port);if(typeof d.setRequestHeader!="undefined"){d.setRequestHeader("Content-Type","text/plain;charset=UTF-8")}d.send(f)};a.user1.orbiter.HTTPDirectConnection.prototype.removePendingRequest=function(d){for(var c=this.pendingRequests.length;--c>=0;){if(this.pendingRequests[c]===d){this.pendingRequests.splice(c,1)}}};a.user1.orbiter.HTTPDirectConnection.prototype.doRequestDeactivation=function(){for(var c=this.pendingRequests.length;--c>=0;){try{this.pendingRequests[c].abort()}catch(d){}}this.pendingRequests=[]};a.user1.orbiter.HTTPDirectConnection.prototype.toString=function(){return"[HTTPDirectConnection, host: "+this.host+", port: "+this.port+", send-delay: "+this.getSendDelay()+"]"};a.user1.orbiter.HTTPDirectConnection.prototype.doDispose=function(){this.deactivateHTTPRequests()};a.user1.orbiter.MessageListener=function(e,d,c){this.listener=e;this.forRoomIDs=d;this.thisArg=c};a.user1.orbiter.MessageListener.prototype.getListenerFunction=function(){return this.listener};a.user1.orbiter.MessageListener.prototype.getForRoomIDs=function(){return this.forRoomIDs};a.user1.orbiter.MessageListener.prototype.getThisArg=function(){return this.thisArg};a.user1.orbiter.MessageListener.prototype.toString=function(){return"[object MessageListener]"};a.user1.orbiter.MessageManager=function(c,d){this.log=c;this.messageListeners=new Object();this.removeListenersOnDisconnect=true;this.numMessagesReceived=0;this.numMessagesSent=0;this.currentConnection=null;this.connectionManager=d;this.connectionManager.addEventListener(a.user1.orbiter.ConnectionManagerEvent.SELECT_CONNECTION,this.selectConnectionListener,this)};a.user1.orbiter.MessageManager.prototype.selectConnectionListener=function(c){if(this.currentConnection!=null){this.currentConnection.removeEventListener(a.user1.orbiter.ConnectionEvent.RECEIVE_UPC,this.upcReceivedListener);this.currentConnection.removeEventListener(a.user1.orbiter.ConnectionEvent.DISCONNECT,this.disconnectListener);this.currentConnection.removeEventListener(a.user1.orbiter.ConnectionEvent.CONNECT_FAILURE,this.connectFailureListener)}this.currentConnection=c.getConnection();this.currentConnection.addEventListener(a.user1.orbiter.ConnectionEvent.RECEIVE_UPC,this.upcReceivedListener,this);this.currentConnection.addEventListener(a.user1.orbiter.ConnectionEvent.DISCONNECT,this.disconnectListener,this);this.currentConnection.addEventListener(a.user1.orbiter.ConnectionEvent.CONNECT_FAILURE,this.connectFailureListener,this)};a.user1.orbiter.MessageManager.prototype.disconnectListener=function(c){this.cleanupAfterClosedConnection(c.target)};a.user1.orbiter.MessageManager.prototype.connectFailureListener=function(c){this.cleanupAfterClosedConnection(c.target)};a.user1.orbiter.MessageManager.prototype.cleanupAfterClosedConnection=function(c){var f;if(this.removeListenersOnDisconnect){this.log.info("[MESSAGE_MANAGER] Removing registered message listeners.");for(var d in this.messageListeners){f=this.messageListeners[d];for(var e in f){this.removeMessageListener(d,f[e].getListenerFunction())}}}else{this.log.warn("[MESSAGE_MANAGER] Leaving message listeners registered. \nBe sure to remove any unwanted message listeners manually.")}this.numMessagesReceived=0;this.numMessagesSent=0};a.user1.orbiter.MessageManager.prototype.sendUPC=function(f){if(!this.connectionManager.isReady()){this.log.warn("[MESSAGE_MANAGER] Connection not ready. UPC not sent. Message: "+f);return}var d="<U><M>"+f+"</M>";var c;if(arguments.length>1){d+="<L>";for(var e=1;e<arguments.length;e++){c=arguments[e];c=c==undefined?"":c.toString();if(c.indexOf("<")!=-1){if(c.indexOf("<f t=")!=0){c="<![CDATA["+c+"]]>"}}d+="<A>"+c+"</A>"}d+="</L>"}d+="</U>";this.log.debug("[MESSAGE_MANAGER] UPC sent: "+d);this.connectionManager.getActiveConnection().send(d)};a.user1.orbiter.MessageManager.prototype.upcReceivedListener=function(j){var i=j.getUPC();this.log.debug("[MESSAGE_MANAGER] UPC received: "+i);var k;var d=new Array();var g=i.indexOf("</M>");k=i.substring(6,g);var h=i.indexOf("<A>",g);var f;var c;while(h!=-1){f=i.indexOf("</A>",h);c=i.substring(h+3,f);if(c.indexOf("<![CDATA[")==0){c=c.substr(9,c.length-12)}d.push(c);h=i.indexOf("<A>",f)}this.notifyMessageListeners(k,d)};a.user1.orbiter.MessageManager.prototype.addMessageListener=function(h,i,e,d){if(d!=null){var g=Object.prototype.toString.call(d);if(g!="[object Array]"){throw new Error("[MESSAGE_MANAGER] Illegal argument type "+g+" supplied for addMessageListener()'s forRoomIDs parameter. Value must be an Array.")}}if(this.messageListeners[h]===undefined){this.messageListeners[h]=new Array()}var c=this.messageListeners[h];if(this.hasMessageListener(h,i)){return false}var f=new a.user1.orbiter.MessageListener(i,d===undefined?null:d,e);c.push(f);return true};a.user1.orbiter.MessageManager.prototype.removeMessageListener=function(f,g){var c=this.messageListeners[f];if(c==null){return false}var d;for(var e=0;e<c.length;e++){if(c[e].getListenerFunction()==g){d=true;c.splice(e,1);break}}if(c.length==0){delete this.messageListeners[f]}return d};a.user1.orbiter.MessageManager.prototype.hasMessageListener=function(e,f){var c=this.messageListeners[e];if(c==null){return false}for(var d=0;d<c.length;d++){if(c[d].getListenerFunction()==f){return true}}return false};a.user1.orbiter.MessageManager.prototype.getMessageListeners=function(c){return this.messageListeners[c]!=undefined?this.messageListeners[c]:[]};a.user1.orbiter.MessageManager.prototype.notifyMessageListeners=function(g,d){var f=this.messageListeners[g];if(f===undefined){if(!(g.charAt(0)=="u"&&parseInt(g.substring(1))>1)){this.log.warn("Message delivery failed. No listeners found. Message: "+g+". Arguments: "+d.join())}return}else{f=f.slice(0)}var c=f.length;for(var e=0;e<c;e++){f[e].getListenerFunction().apply(f[e].getThisArg(),d)}};a.user1.orbiter.MessageManager.prototype.toString=function(){return"[object MessageManager]"};a.user1.orbiter.LOADED=true})((typeof window=="undefined")?this:window);